<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>hexo参数介绍</title>
    <url>/2021/08/06/17-53-07/</url>
    <content><![CDATA[]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>框架</tag>
        <tag>配置环境</tag>
      </tags>
  </entry>
  <entry>
    <title>markdown语法</title>
    <url>/2021/08/05/13-52-54/</url>
    <content><![CDATA[<p><strong>之前纯属觉着好玩学了一点markdown的语法，现在要写博客才发现是真的有用，于是再复习一下，顺便整理出来吧,本地展示是正常的</strong></p>
<span id="more"></span>
<h1 id="一-标题"><a href="#一-标题" class="headerlink" title="一. 标题"></a>一. 标题</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># h1</span><br><span class="line">## h2</span><br><span class="line">### h3</span><br><span class="line">#### h4</span><br><span class="line">....</span><br></pre></td></tr></table></figure>


<p><strong>ps: 示例如下只测试二三四级标题，省的打乱我布局，哈哈，还有要注意#号后的空格，当初可没少踩坑</strong></p>
<h2 id="h2"><a href="#h2" class="headerlink" title="h2"></a>h2</h2><h3 id="h3"><a href="#h3" class="headerlink" title="h3"></a>h3</h3><h4 id="h4"><a href="#h4" class="headerlink" title="h4"></a>h4</h4><h1 id="二-表格"><a href="#二-表格" class="headerlink" title="二. 表格"></a>二. 表格</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">| Tables        | Are           | Cool  |</span><br><span class="line">| ------------- |:-------------:| -----:|</span><br><span class="line">| col 1 is      | right-aligned | $1600 |</span><br><span class="line">| col 2 is      | centered      |   $12 |</span><br><span class="line">| col 3 is      | left-aligned  |    $1 |</span><br></pre></td></tr></table></figure>

<p><strong>ps:  不对齐也可以，只要一一对应就行 样式如下</strong></p>
<table>
<thead>
<tr>
<th>Tables</th>
<th align="center">Are</th>
<th align="right">Cool</th>
</tr>
</thead>
<tbody><tr>
<td>col 1 is</td>
<td align="center">right-aligned</td>
<td align="right">$1600</td>
</tr>
<tr>
<td>col 2 is</td>
<td align="center">centered</td>
<td align="right">$12</td>
</tr>
<tr>
<td>col 3 is</td>
<td align="center">left-aligned</td>
<td align="right">$1</td>
</tr>
</tbody></table>
<h1 id="三-粗体，斜体"><a href="#三-粗体，斜体" class="headerlink" title="三. 粗体，斜体"></a>三. 粗体，斜体</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">*斜体文本*</span><br><span class="line">**粗体文本**</span><br><span class="line">***粗斜体文本***</span><br></pre></td></tr></table></figure>

<p><strong>ps:示例如下</strong></p>
<p><em>斜体文本</em><br><strong>粗体文本</strong><br><em><strong>粗斜体文本</strong></em></p>
<h1 id="四-链接"><a href="#四-链接" class="headerlink" title="四. 链接"></a>四. 链接</h1><h2 id="常用链接"><a href="#常用链接" class="headerlink" title="常用链接"></a>常用链接</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">文字链接 [万星阁](https://wanstarge.github.io)</span><br><span class="line">网址链接 &lt;https://wanstarge.github.io&gt;</span><br></pre></td></tr></table></figure>

<p><strong>ps:示例如下</strong></p>
<p>文字链接 <a href="https://wanstarge.github.io/">万星阁</a><br>网址链接 <a href="https://wanstarge.github.io/">https://wanstarge.github.io</a></p>
<h2 id="高级链接技巧"><a href="#高级链接技巧" class="headerlink" title="高级链接技巧"></a>高级链接技巧</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">这个链接用 first 作为网址变量 [myself][first]</span><br><span class="line">这个链接用 yahoo 作为网址变量 [Yahoo!][yahoo]</span><br><span class="line">然后在文档的结尾为变量赋值（网址）</span><br><span class="line">[first]:https://wanstarge.github.io</span><br><span class="line">[yahoo]:http://www.yahoo.com/</span><br></pre></td></tr></table></figure>

<p><strong>ps: 由于目前发现只有markdown-here支持这种操作，就不再演示了</strong></p>
<h1 id="五-列表"><a href="#五-列表" class="headerlink" title="五. 列表"></a>五. 列表</h1><h2 id="普通无序列表"><a href="#普通无序列表" class="headerlink" title="普通无序列表"></a>普通无序列表</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">- 列表文本前使用 [减号+空格]</span><br><span class="line">+ 列表文本前使用 [加号+空格]</span><br><span class="line">* 列表文本前使用 [星号+空格]</span><br></pre></td></tr></table></figure>

<p><strong>ps:示例如下</strong></p>
<ul>
<li>列表文本前使用 [减号+空格]</li>
</ul>
<ul>
<li>列表文本前使用 [加号+空格]</li>
</ul>
<ul>
<li>列表文本前使用 [星号+空格]</li>
</ul>
<h2 id="普通有序列表"><a href="#普通有序列表" class="headerlink" title="普通有序列表"></a>普通有序列表</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1. 列表前使用 [数字+空格]</span><br><span class="line">2. 我们会自动帮你添加数字</span><br><span class="line">7. 不用担心数字不对，显示的时候我们会自动把这行的 7 纠正为 3</span><br></pre></td></tr></table></figure>

<p><strong>ps:示例如下</strong></p>
<ol>
<li>列表前使用 [数字+空格]</li>
<li>我们会自动帮你添加数字</li>
<li>不用担心数字不对，显示的时候我们会自动把这行的 7 纠正为 3</li>
</ol>
<h2 id="列表嵌套"><a href="#列表嵌套" class="headerlink" title="列表嵌套"></a>列表嵌套</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1. 列出所有元素：</span><br><span class="line">    - 无序列表元素 A</span><br><span class="line">        1. 元素 A 的有序子列表</span><br><span class="line">    - 前面加四个空格</span><br><span class="line">2. 列表里的多段换行：</span><br><span class="line">    前面必须加四个空格，</span><br><span class="line">    这样换行，整体的格式不会乱</span><br><span class="line">3. 列表里引用：</span><br><span class="line"></span><br><span class="line">        &gt; 前面空一行  </span><br><span class="line">        &gt; 需要缩进，顶格将打断列表  </span><br><span class="line">        &gt; 换行需要加两个以上空格并回车</span><br><span class="line"></span><br><span class="line">4. 列表里代码段：</span><br><span class="line">	\```</span><br><span class="line">    前面四个空格，之后按代码语法 \``` 书写</span><br><span class="line">    \```</span><br><span class="line">    </span><br><span class="line">        或者直接八个空格，引入代码块(代码块的部分全都要空格)</span><br></pre></td></tr></table></figure>

<p><strong>ps:示例如下</strong></p>
<ol>
<li><p>列出所有元素：</p>
<ul>
<li>无序列表元素 A<ol>
<li>元素 A 的有序子列表</li>
</ol>
</li>
<li>前面加四个空格</li>
</ul>
</li>
<li><p>列表里的多段换行：<br> 前面必须加四个空格，<br> 这样换行，整体的格式不会乱</p>
</li>
<li><p>列表里引用：</p>
<pre><code> &gt; 前面空一行  
 &gt; 需要缩进，顶格将打断列表  
 &gt; 换行需要加两个以上空格并回车
</code></pre>
</li>
<li><p>列表里代码段：</p>
</li>
</ol>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">前面四个空格，之后按代码语法 ``` 书写</span><br></pre></td></tr></table></figure>

<pre><code>    或者直接八个空格，引入代码块
</code></pre>
<h1 id="六-引用"><a href="#六-引用" class="headerlink" title="六. 引用"></a>六. 引用</h1><h2 id="普通引用"><a href="#普通引用" class="headerlink" title="普通引用"></a>普通引用</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&gt; 引用文本前使用 [大于号+空格]  </span><br><span class="line">&gt; 折行可以不加，新起一行都要加上哦</span><br></pre></td></tr></table></figure>

<p><strong>ps:示例如下</strong></p>
<blockquote>
<p>引用文本前使用 [大于号+空格]<br>折行可以不加，新起一行都要加上哦</p>
</blockquote>
<h2 id="引用里嵌套引用"><a href="#引用里嵌套引用" class="headerlink" title="引用里嵌套引用"></a>引用里嵌套引用</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&gt; 最外层引用</span><br><span class="line">&gt;&gt; 多一个 &gt; 嵌套一层引用</span><br><span class="line">&gt;&gt;&gt; 可以嵌套很多层</span><br></pre></td></tr></table></figure>

<p><strong>ps:示例如下</strong></p>
<blockquote>
<p>最外层引用</p>
<blockquote>
<p>多一个 &gt; 嵌套一层引用</p>
<blockquote>
<p>可以嵌套很多层</p>
</blockquote>
</blockquote>
</blockquote>
<h2 id="引用里嵌套列表"><a href="#引用里嵌套列表" class="headerlink" title="引用里嵌套列表"></a>引用里嵌套列表</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&gt; - 这是引用里嵌套的一个列表</span><br><span class="line">&gt; - 还可以有子列表</span><br><span class="line">&gt;     * 子列表需要从 - 之后延后四个空格开始</span><br></pre></td></tr></table></figure>

<p><strong>ps:示例如下</strong></p>
<blockquote>
<ul>
<li>这是引用里嵌套的一个列表</li>
<li>还可以有子列表<ul>
<li>子列表需要从 - 之后延后四个空格开始</li>
</ul>
</li>
</ul>
</blockquote>
<h2 id="引用里嵌套代码块"><a href="#引用里嵌套代码块" class="headerlink" title="引用里嵌套代码块"></a>引用里嵌套代码块</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&gt;     同样的，在前面加四个空格形成代码块(这里没有显示不过markdown\-here和github都可以使用)</span><br><span class="line">&gt;  </span><br></pre></td></tr></table></figure>
<blockquote>
<p>或者使用 ``` 形成代码块</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">```</span><br><span class="line"></span><br><span class="line">**ps:示例如下**</span><br><span class="line"></span><br><span class="line">    同样的，在前面加四个空格形成代码块(这里没有显示不过markdown\-here和github都可以使用)</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<pre><code>或者使用 ``` 形成代码块
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"># 七. 图片</span><br><span class="line"></span><br></pre></td></tr></table></figure>
</code></pre>
<p><img src="https://wanstarge.github.io/images/avatar.jpg" alt="图片名称"></p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">**ps:示例如下**</span><br><span class="line"></span><br><span class="line">&lt;img src=&quot;https://wanstarge.github.io/images/avatar.jpg&quot; alt=&quot;图片名称&quot; style=&quot;zoom:25%;&quot; /&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>也有之前说的那种高级方式，不过也只能在markdown-here里面使用<br>这个链接用 1 作为网址变量  <img src="https://www.baidu.com/img/bdlogo.png" alt="Google">.<br>然后在文档的结尾位变量赋值（网址）</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"># 八.  常用操作</span><br><span class="line"></span><br><span class="line">## 换行</span><br><span class="line"></span><br><span class="line">如果另起一行，只需在当前行结尾加 2 个空格，在当前行的结尾加 2 个空格，这行就会新起一行，如果是要起一个新段落，只需要空出一行即可。</span><br><span class="line"></span><br><span class="line">## 分隔符</span><br><span class="line"></span><br><span class="line">如果你有写分割线的习惯，可以新起一行输入三个减号 -：</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<hr>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">**ps:示例如下**</span><br><span class="line"></span><br><span class="line">---</span><br><span class="line"></span><br><span class="line">## 符号转义</span><br><span class="line"></span><br><span class="line">如果你的描述中需要用到 markdown 的符号，比如 `_ # *` 等，但又不想它被转义，这时候可以在这些符号前加反斜杠，如 `\_ \# \*` 进行避免。</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p> 复制代码 隐藏代码_不想这里的文本变斜体_<br>**不想这里的文本被加粗**</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">\_不想这里的文本变斜体\_</span><br><span class="line">\*\*不想这里的文本被加粗\*\*</span><br><span class="line"></span><br><span class="line"># 九. 代码</span><br><span class="line"></span><br><span class="line">## 行内代码</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>如果只想高亮正文中某个词，可以用两个反引号包裹起来<br><code>行内代码</code></p>
<pre><code>            下面这两个也只适用于markdown-here
</code></pre>
<p>如果行内代码包含反引号，可以用多个反引号包裹<br>包含<code>反引号(`) </code> 的行内代码<br>如果行内代码开头就有反引号，需要起始端和结束端各一个空格<br><code>`反引号`</code></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">**ps:示例如下**</span><br><span class="line"></span><br><span class="line">`行内代码` </span><br><span class="line"></span><br><span class="line">## 普通代码</span><br><span class="line"></span><br><span class="line">### 反引号包裹</span><br><span class="line"></span><br><span class="line">用3个或以上的反引号包裹起来</span><br><span class="line"></span><br><span class="line">`````</span><br><span class="line"> 复制代码 隐藏代码```</span><br><span class="line"># rewrite`s rules for wordpress pretty url </span><br><span class="line">LoadModule rewrite_module  modules/mod_rewrite.so</span><br><span class="line">RewriteCond %&#123;REQUEST_FILENAME&#125; !-f</span><br><span class="line">RewriteCond %&#123;REQUEST_FILENAME&#125; !-d</span><br><span class="line">RewriteRule . index.php [NC,L]</span><br><span class="line">````</span><br><span class="line">`````</span><br><span class="line"></span><br><span class="line">### 波浪线包裹</span><br><span class="line"></span><br><span class="line">使用3个及以上的波浪线包裹代码</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<pre><code># rewrite`s rules for wordpress pretty url 
LoadModule rewrite_module  modules/mod_rewrite.so
RewriteCond %&#123;REQUEST_FILENAME&#125; !-f
RewriteCond %&#123;REQUEST_FILENAME&#125; !-d
RewriteRule . index.php [NC,L]
</code></pre>
<pre><code>
</code></pre>
]]></content>
      <categories>
        <category>markdown</category>
      </categories>
      <tags>
        <tag>基础语法</tag>
      </tags>
  </entry>
  <entry>
    <title>mysql配置环境</title>
    <url>/2021/08/08/09-32-51/</url>
    <content><![CDATA[<p>MySQL关是一种关系数据库管理系统，所使用的 SQL 语言是用于访问数据库的最常用的标准化语言，其特点为体积小、速度快、总体拥有成本低，尤其是开放源码这一特点，在 Web应用方面 MySQL 是最好的 RDBMS(Relational Database Management System：关系数据库管理系统)应用软件之一</p>
<span id="more"></span>

<p>本博文以免安装的为例，<a href="https://dev.mysql.com/downloads/mysql/">点击下载</a>，选择如下图所示的免安装版本</p>
<p><img src="/images/msql1.jpg"></p>
<h1 id="一-配置环境"><a href="#一-配置环境" class="headerlink" title="一. 配置环境"></a>一. 配置环境</h1><p>下载完成后后解压到自己选择的目录下，而后复制mysql的bin目录路径比如D:\mysql\bin</p>
<p>win+r输入sysdm.cpl，打开系统属性  &gt;&gt; 高级 &gt;&gt; 环境变量 &gt;&gt; 系统变量中的path &gt;&gt; 新建 &gt;&gt; 再把刚刚复制的路径粘贴进去， 别忘记确定保存，如下图</p>
<p><img src="/images/%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F1.jpg"></p>
<p><img src="/images/%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F2.jpg"></p>
<h1 id="二-安装服务"><a href="#二-安装服务" class="headerlink" title="二. 安装服务"></a>二. 安装服务</h1><p>以上都完成的情况下，再以管理员模式打开命令提示符，依次输入以下命令回车</p>
<h2 id="1-安装mysql服务"><a href="#1-安装mysql服务" class="headerlink" title="1. 安装mysql服务"></a>1. 安装mysql服务</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mysqld --install</span><br><span class="line"><span class="comment"># 如果后期标记删除mysql,用下面的命令</span></span><br><span class="line">sc delete mysql</span><br></pre></td></tr></table></figure>

<h2 id="2-初始化mysql"><a href="#2-初始化mysql" class="headerlink" title="2. 初始化mysql"></a>2. 初始化mysql</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mysqld --initialize --console</span><br></pre></td></tr></table></figure>

<p>在这里，初始化会产生一个随机密码,如下图框框所示，记住这个密码，后面会用到</p>
<p><img src="/images/mysql2.png"></p>
<h2 id="3-开启mysql服务"><a href="#3-开启mysql服务" class="headerlink" title="3. 开启mysql服务"></a>3. 开启mysql服务</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">net start mysql</span><br><span class="line"><span class="comment"># 顺便说一下关闭的命令</span></span><br><span class="line">net stop mysql</span><br></pre></td></tr></table></figure>

<h2 id="4-登录验证"><a href="#4-登录验证" class="headerlink" title="4. 登录验证"></a>4. 登录验证</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mysql -u root -p</span><br></pre></td></tr></table></figure>

<p>然后输入刚刚产生的随机密码，不包括前面的空格，如果出现下面图片的状态代表已经安装配置成功</p>
<p><img src="/images/mysql3.jpg"></p>
<h2 id="5-修改密码"><a href="#5-修改密码" class="headerlink" title="5. 修改密码"></a>5. 修改密码</h2><p>由于初始化产生的随机密码太复杂，不便于我们登录mysql，因此，我们可以修改一个自己能记住的密码，在登录的情况下输入以下命令</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">alter user <span class="string">&#x27;root&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span> identified by <span class="string">&#x27;root&#x27;</span></span><br></pre></td></tr></table></figure>

<p>这时登录密码就会改为root，至此大功告成</p>
<h1 id="三-配置文件"><a href="#三-配置文件" class="headerlink" title="三. 配置文件"></a>三. 配置文件</h1><p>在mysql根目录下创建一个名为my.ini的文件，如下图</p>
<p><img src="/images/mysql4.jpg"></p>
<p>你可以参考我的配置</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[mysqld]</span><br><span class="line">character-set-server=utf8mb4</span><br><span class="line">bind-address=0.0.0.0</span><br><span class="line">port=3306</span><br><span class="line">default-storage-engine=INNODB</span><br><span class="line">[mysql]</span><br><span class="line">default-character-set=utf8mb4</span><br><span class="line">[client]</span><br><span class="line">default-character-set=utf8mb4</span><br></pre></td></tr></table></figure>

<h1 id="四-注意事项"><a href="#四-注意事项" class="headerlink" title="四. 注意事项"></a>四. 注意事项</h1><ol>
<li>如果开启服务后，还是不能登录，有可能是没有开系统中mysql的服务，找到设备管理器中的服务选择mysql开启即可如下图<img src="/images/%E6%9C%8D%E5%8A%A1.jpg"></li>
<li>还有默认开放端口为3306，在上面的ini文件里已定义，但我的8080端口也被占了，大家看着改吧，这个没太大影响</li>
</ol>
<p>最后，欢迎评论区讨论</p>
]]></content>
      <categories>
        <category>mysql</category>
      </categories>
      <tags>
        <tag>配置环境</tag>
      </tags>
  </entry>
  <entry>
    <title>mysql基本语法</title>
    <url>/2021/08/07/23-00-34/</url>
    <content><![CDATA[<h1 id="基本书写规则"><a href="#基本书写规则" class="headerlink" title="基本书写规则"></a>基本书写规则</h1><ol>
<li>SQL 语句要以分号<code>;</code>结尾</li>
<li>SQL 语句不区分大小写</li>
<li>常数的书写方式是固定的<ol>
<li>SQL 语句中含有字符串的时候，需要使用英文单引号<code>&#39;</code>将字符串括起来</li>
<li>SQL 语句中含有日期的时候 建议使用’2020-01-26’ 这种<code>&#39;年-月-日&#39;</code></li>
<li>在 SQL 语句中书写数字的时候，不需要使用任何符号标识，直接写成 1000 这样的数字即可</li>
</ol>
</li>
<li>单词需要用半角空格或者换行来分隔</li>
</ol>
<span id="more"></span>

<h2 id="注意事项："><a href="#注意事项：" class="headerlink" title="注意事项："></a>注意事项：</h2><p>表名、字段名必须使用小写字母或数字，禁止出现数字开头，禁止两个下划线中间只出现数字。数据库字段名的修改代价很大，因为无法进行预发布，所以字段名称需要慎重考虑。</p>
<p>通俗的说就是，MySQL 在 Windows 系统下不区分大小写，但在 Linux 系统下默认区分大小写。因此，数据库名、表名和字段名，都不允许出现任何大写字母，避免节外生枝。</p>
<h1 id="一-查看数据库"><a href="#一-查看数据库" class="headerlink" title="一. 查看数据库"></a>一. 查看数据库</h1><h2 id="1-查看特定数据库"><a href="#1-查看特定数据库" class="headerlink" title="1. 查看特定数据库"></a>1. 查看特定数据库</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SHOW DATABASES [LIKE &#x27;数据库名&#x27;];</span><br></pre></td></tr></table></figure>

<h2 id="2-查看所有数据库"><a href="#2-查看所有数据库" class="headerlink" title="2. 查看所有数据库"></a>2. 查看所有数据库</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SHOW DATABASES;</span><br></pre></td></tr></table></figure>

<h2 id="3-查看特定数据库"><a href="#3-查看特定数据库" class="headerlink" title="3. 查看特定数据库"></a>3. 查看特定数据库</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SHOW DATABASES LIKE &#x27;test_db&#x27;;  # 查找特定数据库</span><br><span class="line">SHOW DATABASES LIKE &#x27;%test%&#x27;;   # 查询名字中包含test的数据库</span><br><span class="line">SHOW DATABASES LIKE &#x27;db%&#x27;;      # 查询以db开头的数据库</span><br><span class="line">SHOW DATABASES LIKE &#x27;%db&#x27;;      # 查询以db结尾的数据库</span><br></pre></td></tr></table></figure>

<h1 id="二-创建数据库"><a href="#二-创建数据库" class="headerlink" title="二. 创建数据库"></a>二. 创建数据库</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">CREATE DATABASE [IF NOT EXISTS] &lt;数据库名&gt;  # 中括号表示可有可无的意思</span><br><span class="line">[[DEFAULT] CHARACTER SET &lt;字符集名&gt;] </span><br><span class="line">[[DEFAULT] COLLATE &lt;校对规则名&gt;];</span><br></pre></td></tr></table></figure>

<p>示例：使用 MySQL 命令行工具创建一个测试数据库，命名为 test_db_char，指定其默认字符集为 utf8，默认校对规则为 utf8_chinese_ci（简体中文，不区分大小写），输入的 SQL 语句与执行结果如下所示：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mysql&gt; CREATE DATABASE IF NOT EXISTS test_db_char</span><br><span class="line">    -&gt; DEFAULT CHARACTER SET utf8</span><br><span class="line">    -&gt; DEFAULT COLLATE utf8_chinese_ci;</span><br></pre></td></tr></table></figure>

<h1 id="三-更改数据库"><a href="#三-更改数据库" class="headerlink" title="三. 更改数据库"></a>三. 更改数据库</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ALTER DATABASE [数据库名] &#123; </span><br><span class="line">[ DEFAULT ] CHARACTER SET &lt;字符集名&gt; |</span><br><span class="line">[ DEFAULT ] COLLATE &lt;校对规则名&gt;&#125;</span><br></pre></td></tr></table></figure>

<p>使用命令行工具将数据库 test_db 的指定字符集修改为 gb2312，默认校对规则修改为 gb2312_unicode_ci，输入 SQL 语句与执行结果如下所示：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mysql&gt; ALTER DATABASE test_db</span><br><span class="line">    -&gt; DEFAULT CHARACTER SET gb2312</span><br><span class="line">    -&gt; DEFAULT COLLATE gb2312_chinese_ci;</span><br></pre></td></tr></table></figure>

<h1 id="四-删除数据库"><a href="#四-删除数据库" class="headerlink" title="四. 删除数据库"></a>四. 删除数据库</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">DROP DATABASE [ IF EXISTS ] &lt;数据库名&gt;</span><br></pre></td></tr></table></figure>

<h2 id="注意事项：-1"><a href="#注意事项：-1" class="headerlink" title="注意事项："></a>注意事项：</h2><ol>
<li>DROP DATABASE：删除数据库中的所有表格并同时删除数据库。使用此语句时要非常小心，以免错误删除。如果要使用 DROP DATABASE，需要获得数据库 DROP 权限。</li>
<li>MySQL 安装后，系统会自动创建名为 information_schema 和 mysql 的两个系统数据库，系统数据库存放一些和数据库相关的信息，如果删除了这两个数据库，MySQL 将不能正常工作。</li>
</ol>
<h1 id="五-选择数据库"><a href="#五-选择数据库" class="headerlink" title="五. 选择数据库"></a>五. 选择数据库</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">USE &lt;数据库名&gt;</span><br></pre></td></tr></table></figure>

<p>选择当前要使用的数据库</p>
<h1 id="六-数据库注释"><a href="#六-数据库注释" class="headerlink" title="六. 数据库注释"></a>六. 数据库注释</h1><h2 id="1-单行注释"><a href="#1-单行注释" class="headerlink" title="1.单行注释"></a>1.单行注释</h2><ul>
<li><code>#</code>注释符后直接加注释内容</li>
<li><code>--</code>注释符后需要加一个空格再加注释内容</li>
</ul>
<h2 id="2-多行注释"><a href="#2-多行注释" class="headerlink" title="2.多行注释"></a>2.多行注释</h2><ul>
<li>多行注释使用<code>/* */</code>注释符注释内容写在<code>/*</code>和<code>*/</code>之间，可以跨多行。</li>
</ul>
<h1 id="七-帮助命令"><a href="#七-帮助命令" class="headerlink" title="七. 帮助命令"></a>七. 帮助命令</h1><ol>
<li>HELP contents 命令查看帮助文档的目录列表</li>
<li><code>HELP Data Types;</code> 命令查看所支持的数据类型</li>
<li><code>HELP CREATE TABLE</code> 命令查询创建数据表的语法</li>
</ol>
]]></content>
      <categories>
        <category>mysql</category>
      </categories>
      <tags>
        <tag>基础语法</tag>
      </tags>
  </entry>
  <entry>
    <title>sublime-linux python</title>
    <url>/2021/08/05/09-01-34/</url>
    <content><![CDATA[<p><strong>sublime在linux上调用python执行代码时会报错，找不到python选项，而linux上python2命名为python，而python3则就需要直接写成python3，解决方法</strong></p>
<span id="more"></span>
<h3 id="一-直接用命令创建软链接"><a href="#一-直接用命令创建软链接" class="headerlink" title="一. 直接用命令创建软链接"></a>一. 直接用命令创建软链接</h3><p>将python指向python3，同时将pip指向pip3</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ln -s /usr/bin/python3 /usr/bin/python</span><br><span class="line">ln -s /usr/<span class="built_in">local</span>/bin/pip /usr/<span class="built_in">local</span>/bin/pip3</span><br></pre></td></tr></table></figure>

<p>对了改动应该会需要超级用户权限，在前面加个sudo就行，记得空格</p>
<h3 id="二-改动sublime的源文件"><a href="#二-改动sublime的源文件" class="headerlink" title="二. 改动sublime的源文件"></a>二. 改动sublime的源文件</h3><p>就是这个**<u>Main.sublime-menu</u>**,上sublime对应的根目录里去搜就行</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[</span><br><span class="line">     &#123;</span><br><span class="line">        <span class="string">&quot;id&quot;</span>: <span class="string">&quot;tools&quot;</span>,</span><br><span class="line">        <span class="string">&quot;children&quot;</span>:</span><br><span class="line">        [&#123;</span><br><span class="line">            <span class="string">&quot;caption&quot;</span>: <span class="string">&quot;SublimeREPL&quot;</span>,</span><br><span class="line">            <span class="string">&quot;mnemonic&quot;</span>: <span class="string">&quot;r&quot;</span>,</span><br><span class="line">            <span class="string">&quot;id&quot;</span>: <span class="string">&quot;SublimeREPL&quot;</span>,</span><br><span class="line">            <span class="string">&quot;children&quot;</span>:</span><br><span class="line">            [</span><br><span class="line">                &#123;<span class="string">&quot;caption&quot;</span>: <span class="string">&quot;Python&quot;</span>,</span><br><span class="line">                <span class="string">&quot;id&quot;</span>: <span class="string">&quot;Python&quot;</span>,</span><br><span class="line"> </span><br><span class="line">                 <span class="string">&quot;children&quot;</span>:[</span><br><span class="line">                    &#123;<span class="string">&quot;command&quot;</span>: <span class="string">&quot;repl_open&quot;</span>,</span><br><span class="line">                     <span class="string">&quot;caption&quot;</span>: <span class="string">&quot;Python&quot;</span>,</span><br><span class="line">                     <span class="string">&quot;id&quot;</span>: <span class="string">&quot;repl_python&quot;</span>,</span><br><span class="line">                     <span class="string">&quot;mnemonic&quot;</span>: <span class="string">&quot;p&quot;</span>,</span><br><span class="line">                     <span class="string">&quot;args&quot;</span>: &#123;</span><br><span class="line">                        <span class="string">&quot;type&quot;</span>: <span class="string">&quot;subprocess&quot;</span>,</span><br><span class="line">                        <span class="string">&quot;encoding&quot;</span>: <span class="string">&quot;utf8&quot;</span>,</span><br><span class="line">                        <span class="string">&quot;cmd&quot;</span>: [<span class="string">&quot;python3&quot;</span>, <span class="string">&quot;-i&quot;</span>, <span class="string">&quot;-u&quot;</span>],</span><br><span class="line">                        <span class="string">&quot;cwd&quot;</span>: <span class="string">&quot;<span class="variable">$file_path</span>&quot;</span>,</span><br><span class="line">                        <span class="string">&quot;syntax&quot;</span>: <span class="string">&quot;Packages/Python/Python.tmLanguage&quot;</span>,</span><br><span class="line">                        <span class="string">&quot;external_id&quot;</span>: <span class="string">&quot;python&quot;</span>,</span><br><span class="line">                        <span class="string">&quot;extend_env&quot;</span>: &#123;<span class="string">&quot;PYTHONIOENCODING&quot;</span>: <span class="string">&quot;utf-8&quot;</span>&#125;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;,</span><br><span class="line">                    &#123;<span class="string">&quot;command&quot;</span>: <span class="string">&quot;python_virtualenv_repl&quot;</span>,</span><br><span class="line">                     <span class="string">&quot;id&quot;</span>: <span class="string">&quot;python_virtualenv_repl&quot;</span>,</span><br><span class="line">                     <span class="string">&quot;caption&quot;</span>: <span class="string">&quot;Python - virtualenv&quot;</span>&#125;,</span><br><span class="line">                    &#123;<span class="string">&quot;command&quot;</span>: <span class="string">&quot;repl_open&quot;</span>,</span><br><span class="line">                     <span class="string">&quot;caption&quot;</span>: <span class="string">&quot;Python - PDB current file&quot;</span>,</span><br><span class="line">                     <span class="string">&quot;id&quot;</span>: <span class="string">&quot;repl_python_pdb&quot;</span>,</span><br><span class="line">                     <span class="string">&quot;mnemonic&quot;</span>: <span class="string">&quot;d&quot;</span>,</span><br><span class="line">                     <span class="string">&quot;args&quot;</span>: &#123;</span><br><span class="line">                        <span class="string">&quot;type&quot;</span>: <span class="string">&quot;subprocess&quot;</span>,</span><br><span class="line">                        <span class="string">&quot;encoding&quot;</span>: <span class="string">&quot;utf8&quot;</span>,</span><br><span class="line">                        <span class="string">&quot;cmd&quot;</span>: [<span class="string">&quot;python3&quot;</span>, <span class="string">&quot;-i&quot;</span>, <span class="string">&quot;-u&quot;</span>, <span class="string">&quot;-m&quot;</span>, <span class="string">&quot;pdb&quot;</span>, <span class="string">&quot;<span class="variable">$file_basename</span>&quot;</span>],</span><br><span class="line">                        <span class="string">&quot;cwd&quot;</span>: <span class="string">&quot;<span class="variable">$file_path</span>&quot;</span>,</span><br><span class="line">                        <span class="string">&quot;syntax&quot;</span>: <span class="string">&quot;Packages/Python/Python.tmLanguage&quot;</span>,</span><br><span class="line">                        <span class="string">&quot;external_id&quot;</span>: <span class="string">&quot;python&quot;</span>,</span><br><span class="line">                        <span class="string">&quot;extend_env&quot;</span>: &#123;<span class="string">&quot;PYTHONIOENCODING&quot;</span>: <span class="string">&quot;utf-8&quot;</span>&#125;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;,</span><br><span class="line">                    &#123;<span class="string">&quot;command&quot;</span>: <span class="string">&quot;repl_open&quot;</span>,</span><br><span class="line">                     <span class="string">&quot;caption&quot;</span>: <span class="string">&quot;Python - RUN current file&quot;</span>,</span><br><span class="line">                     <span class="string">&quot;id&quot;</span>: <span class="string">&quot;repl_python_run&quot;</span>,</span><br><span class="line">                     <span class="string">&quot;mnemonic&quot;</span>: <span class="string">&quot;d&quot;</span>,</span><br><span class="line">                     <span class="string">&quot;args&quot;</span>: &#123;</span><br><span class="line">                        <span class="string">&quot;type&quot;</span>: <span class="string">&quot;subprocess&quot;</span>,</span><br><span class="line">                        <span class="string">&quot;encoding&quot;</span>: <span class="string">&quot;utf8&quot;</span>,</span><br><span class="line">                        <span class="string">&quot;cmd&quot;</span>: [<span class="string">&quot;python3&quot;</span>, <span class="string">&quot;-u&quot;</span>, <span class="string">&quot;<span class="variable">$file_basename</span>&quot;</span>],</span><br><span class="line">                        <span class="string">&quot;cwd&quot;</span>: <span class="string">&quot;<span class="variable">$file_path</span>&quot;</span>,</span><br><span class="line">                        <span class="string">&quot;syntax&quot;</span>: <span class="string">&quot;Packages/Python/Python.tmLanguage&quot;</span>,</span><br><span class="line">                        <span class="string">&quot;external_id&quot;</span>: <span class="string">&quot;python&quot;</span>,</span><br><span class="line">                        <span class="string">&quot;extend_env&quot;</span>: &#123;<span class="string">&quot;PYTHONIOENCODING&quot;</span>: <span class="string">&quot;utf-8&quot;</span>&#125;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;,</span><br><span class="line">                    &#123;<span class="string">&quot;command&quot;</span>: <span class="string">&quot;repl_open&quot;</span>,</span><br><span class="line">                     <span class="string">&quot;caption&quot;</span>: <span class="string">&quot;Python - IPython&quot;</span>,</span><br><span class="line">                     <span class="string">&quot;id&quot;</span>: <span class="string">&quot;repl_python_ipython&quot;</span>,</span><br><span class="line">                     <span class="string">&quot;mnemonic&quot;</span>: <span class="string">&quot;p&quot;</span>,</span><br><span class="line">                     <span class="string">&quot;args&quot;</span>: &#123;</span><br><span class="line">                        <span class="string">&quot;type&quot;</span>: <span class="string">&quot;subprocess&quot;</span>,</span><br><span class="line">                        <span class="string">&quot;encoding&quot;</span>: <span class="string">&quot;utf8&quot;</span>,</span><br><span class="line">                        <span class="string">&quot;autocomplete_server&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">                        <span class="string">&quot;cmd&quot;</span>: &#123;</span><br><span class="line">                            <span class="string">&quot;osx&quot;</span>: [<span class="string">&quot;python&quot;</span>, <span class="string">&quot;-u&quot;</span>, <span class="string">&quot;<span class="variable">$&#123;packages&#125;</span>/SublimeREPL/config/Python/ipy_repl.py&quot;</span>],</span><br><span class="line">                            <span class="string">&quot;linux&quot;</span>: [<span class="string">&quot;python3&quot;</span>, <span class="string">&quot;-u&quot;</span>, <span class="string">&quot;<span class="variable">$&#123;packages&#125;</span>/SublimeREPL/config/Python/ipy_repl.py&quot;</span>],</span><br><span class="line">                            <span class="string">&quot;windows&quot;</span>: [<span class="string">&quot;python&quot;</span>, <span class="string">&quot;-u&quot;</span>, <span class="string">&quot;<span class="variable">$&#123;packages&#125;</span>/SublimeREPL/config/Python/ipy_repl.py&quot;</span>]</span><br><span class="line">                        &#125;,</span><br><span class="line">                        <span class="string">&quot;cwd&quot;</span>: <span class="string">&quot;<span class="variable">$file_path</span>&quot;</span>,</span><br><span class="line">                        <span class="string">&quot;syntax&quot;</span>: <span class="string">&quot;Packages/Python/Python.tmLanguage&quot;</span>,</span><br><span class="line">                        <span class="string">&quot;external_id&quot;</span>: <span class="string">&quot;python&quot;</span>,</span><br><span class="line">                        <span class="string">&quot;extend_env&quot;</span>: &#123;</span><br><span class="line">                            <span class="string">&quot;PYTHONIOENCODING&quot;</span>: <span class="string">&quot;utf-8&quot;</span>,</span><br><span class="line">                            <span class="string">&quot;SUBLIMEREPL_EDITOR&quot;</span>: <span class="string">&quot;<span class="variable">$editor</span>&quot;</span></span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                ]&#125;</span><br><span class="line">            ]</span><br><span class="line">        &#125;]</span><br><span class="line">    &#125;</span><br><span class="line">]</span><br></pre></td></tr></table></figure>

<p><strong>ps: 欢迎提出更多实用的方法，一起讨论，共同提升</strong></p>
]]></content>
      <categories>
        <category>sublime</category>
      </categories>
      <tags>
        <tag>配置环境</tag>
        <tag>linux</tag>
        <tag>answer</tag>
      </tags>
  </entry>
  <entry>
    <title>sublime环境搭建</title>
    <url>/2021/08/05/07-28-06/</url>
    <content><![CDATA[<p>**首先最近在用sublime这款软件但其环境配置着实麻烦不得已就全部看了一遍，也是一篇总结，在此分享给友友们希望能帮到你。</p>
<span id="more"></span>
<p>以下出现的.sublime-build文件都可以通过<u>packageresourcesviewer</u>这个插件来实现，安装后在命令面板输入open resource回车打开你要配置的语言即可，或者仿照下面go语言的方法做下不了这个插件的我把文件打包的链接扔在这了，下载:<a href="https://wwi.lanzoui.com/i2Rdapmferi">https://wwi.lanzoui.com/i2Rdapmferi</a> 密码:52pj解压后放入自己资源包的文件中就可以用了**<br>                                    <strong>一切基于自己的编译环境配置好的情况下(也就是可以在命令行时使用的情况下)</strong></p>
<h1 id="c-c"><a href="#c-c" class="headerlink" title="c/c++"></a>c/c++</h1><p><strong>在csingle.sublime-build或者c++.sublime-build中更改配置如下，一般改一个就行了这个要装<u>mingw</u>且配置好环境变量，具体自行百度</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&#123; </span><br><span class="line">    <span class="string">&quot;cmd&quot;</span>: [<span class="string">&quot;g++&quot;</span>, <span class="string">&quot;<span class="variable">$&#123;file&#125;</span>&quot;</span>, <span class="string">&quot;-std=c++11&quot;</span>, <span class="string">&quot;-o&quot;</span>, <span class="string">&quot;<span class="variable">$&#123;file_path&#125;</span>\\\\<span class="variable">$&#123;file_base_name&#125;</span>&quot;</span>, <span class="string">&quot;&amp;&quot;</span>, <span class="string">&quot;start&quot;</span>, <span class="string">&quot;cmd&quot;</span>, <span class="string">&quot;/c&quot;</span>, <span class="string">&quot;<span class="variable">$&#123;file_path&#125;</span>\\\\<span class="variable">$&#123;file_base_name&#125;</span> &amp; echo. &amp; pause&quot;</span>],</span><br><span class="line">    <span class="string">&quot;file_regex&quot;</span>: <span class="string">&quot;^(..[^:]*):([0-9]+):?([0-9]+)?:? (.*)$&quot;</span>, <span class="string">&quot;working_dir&quot;</span>: <span class="string">&quot;<span class="variable">$&#123;file_path&#125;</span>&quot;</span>,</span><br><span class="line">    <span class="string">&quot;selector&quot;</span>: <span class="string">&quot;source.c, source.c++&quot;</span>, <span class="string">&quot;shell&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="string">&quot;encoding&quot;</span>:<span class="string">&quot;cp936&quot;</span>,</span><br><span class="line">    <span class="string">&quot;variants&quot;</span>:</span><br><span class="line">    [</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="string">&quot;name&quot;</span> : <span class="string">&quot;Build Only&quot;</span>,</span><br><span class="line">            <span class="string">&quot;cmd&quot;</span>:[<span class="string">&quot;g++&quot;</span>, <span class="string">&quot;<span class="variable">$&#123;file&#125;</span>&quot;</span>, <span class="string">&quot;-std=c++11&quot;</span>, <span class="string">&quot;-o&quot;</span>, <span class="string">&quot;<span class="variable">$&#123;file_path&#125;</span>\\\\<span class="variable">$&#123;file_base_name&#125;</span>&quot;</span>]</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="string">&quot;name&quot;</span> : <span class="string">&quot;Run Only&quot;</span>,</span><br><span class="line">            <span class="string">&quot;cmd&quot;</span> : [<span class="string">&quot;start&quot;</span>, <span class="string">&quot;cmd&quot;</span>, <span class="string">&quot;/c&quot;</span>, <span class="string">&quot;<span class="variable">$&#123;file_path&#125;</span>\\\\<span class="variable">$&#123;file_base_name&#125;</span> &amp; echo. &amp; pause&quot;</span>]</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="string">&quot;name&quot;</span> : <span class="string">&quot;Pipe Build and Run&quot;</span>,</span><br><span class="line">            <span class="string">&quot;cmd&quot;</span>:[<span class="string">&quot;g++&quot;</span>, <span class="string">&quot;<span class="variable">$&#123;file&#125;</span>&quot;</span>, <span class="string">&quot;-std=c++11&quot;</span>, <span class="string">&quot;-o&quot;</span>, <span class="string">&quot;<span class="variable">$&#123;file_path&#125;</span>\\\\<span class="variable">$&#123;file_base_name&#125;</span>&quot;</span>,<span class="string">&quot;&amp;&quot;</span>,<span class="string">&quot;<span class="variable">$&#123;file_path&#125;</span>\\\\<span class="variable">$&#123;file_base_name&#125;</span>&quot;</span>, <span class="string">&quot;&lt;&quot;</span>,<span class="string">&quot;<span class="variable">$&#123;file_path&#125;</span>\\\\in&quot;</span>,<span class="string">&quot;&gt;&quot;</span>,<span class="string">&quot;<span class="variable">$&#123;file_path&#125;</span>\\\\out&quot;</span>]</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="string">&quot;name&quot;</span> : <span class="string">&quot;Pipe Run Only&quot;</span>,</span><br><span class="line">            <span class="string">&quot;cmd&quot;</span> : [<span class="string">&quot;<span class="variable">$&#123;file_base_name&#125;</span>&quot;</span>, <span class="string">&quot;&lt;&quot;</span>,<span class="string">&quot;in&quot;</span>,<span class="string">&quot;&gt;&quot;</span>,<span class="string">&quot;out&quot;</span>]</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="string">&quot;name&quot;</span> : <span class="string">&quot;Project Build &amp; Run&quot;</span>,</span><br><span class="line">            <span class="string">&quot;cmd&quot;</span> : [<span class="string">&quot;g++&quot;</span>, <span class="string">&quot;<span class="variable">$&#123;file_path&#125;</span>\\\\*.cpp&quot;</span>, <span class="string">&quot;-std=c++11&quot;</span>, <span class="string">&quot;-o&quot;</span>, <span class="string">&quot;<span class="variable">$&#123;file_path&#125;</span>/<span class="variable">$&#123;file_base_name&#125;</span>&quot;</span>, <span class="string">&quot;&amp;&quot;</span>, <span class="string">&quot;start&quot;</span>, <span class="string">&quot;cmd&quot;</span>, <span class="string">&quot;/c&quot;</span>, <span class="string">&quot;<span class="variable">$&#123;file_path&#125;</span>/<span class="variable">$&#123;file_base_name&#125;</span> &amp; echo. &amp; pause&quot;</span>]</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="string">&quot;name&quot;</span> : <span class="string">&quot;Project Build Only&quot;</span>,</span><br><span class="line">            <span class="string">&quot;cmd&quot;</span> : [<span class="string">&quot;g++&quot;</span>, <span class="string">&quot;<span class="variable">$&#123;file_path&#125;</span>\\\\*.cpp&quot;</span>, <span class="string">&quot;-std=c++11&quot;</span>, <span class="string">&quot;-o&quot;</span>, <span class="string">&quot;<span class="variable">$&#123;file_path&#125;</span>/<span class="variable">$&#123;file_base_name&#125;</span>&quot;</span>]</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="string">&quot;name&quot;</span> : <span class="string">&quot;Project Run Only&quot;</span>,</span><br><span class="line">            <span class="string">&quot;cmd&quot;</span> : [<span class="string">&quot;start&quot;</span>, <span class="string">&quot;cmd&quot;</span>, <span class="string">&quot;/c&quot;</span>, <span class="string">&quot;<span class="variable">$&#123;file_path&#125;</span>/<span class="variable">$&#123;file_base_name&#125;</span> &amp; echo. &amp; pause&quot;</span>]</span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="javac"><a href="#javac" class="headerlink" title="javac"></a>javac</h1><p><strong>javac.sublime-build</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line"><span class="string">&quot;shell_cmd&quot;</span>: <span class="string">&quot;runJava.bat \&quot;<span class="variable">$file</span>\&quot;&quot;</span>,</span><br><span class="line"><span class="string">&quot;file_regex&quot;</span>: <span class="string">&quot;^(...*?):([0-9]*):?([0-9]*)&quot;</span>,</span><br><span class="line"><span class="string">&quot;selector&quot;</span>: <span class="string">&quot;source.java&quot;</span>,</span><br><span class="line"><span class="string">&quot;encoding&quot;</span>: <span class="string">&quot;utf-8&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>其中runjava.bat应配置文件如下,记得放到自己的jdk的bin目录下</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">@ECHO OFF</span><br><span class="line"><span class="built_in">cd</span> %~dp1</span><br><span class="line">ECHO Compiling %~nx1.......</span><br><span class="line">IF EXIST %~n1.class (</span><br><span class="line">DEL %~n1.class</span><br><span class="line">)</span><br><span class="line">javac %~nx1</span><br><span class="line">IF EXIST %~n1.class (</span><br><span class="line">ECHO -----------OUTPUT-----------</span><br><span class="line">java %~n1</span><br><span class="line">)</span><br></pre></td></tr></table></figure>

<h1 id="go"><a href="#go" class="headerlink" title="go"></a>go</h1><p><strong><u>这个自己在自己安装的sublime路径下\Data\Packages中创建一个文件夹，而后在该文件中创建一个Go.sublime-build文件</u></strong></p>
<p><strong>Go.sublime-build内容</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&#123; </span><br><span class="line">    <span class="string">&quot;cmd&quot;</span>: [<span class="string">&quot;go&quot;</span>, <span class="string">&quot;run&quot;</span>, <span class="string">&quot;<span class="variable">$file_name</span>&quot;</span>], </span><br><span class="line">    <span class="string">&quot;file_regex&quot;</span>: <span class="string">&quot;^[ ]*File \&quot;(…*?)\&quot;, line ([0-9]*)&quot;</span>, </span><br><span class="line">    <span class="string">&quot;working_dir&quot;</span>: <span class="string">&quot;<span class="variable">$file_path</span>&quot;</span>, </span><br><span class="line">    <span class="string">&quot;selector&quot;</span>: <span class="string">&quot;source.go&quot;</span> </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="Bash"><a href="#Bash" class="headerlink" title="Bash"></a>Bash</h1><p><strong>这个需要装linux子系统，在设置中启用适用于linux的windows子系统,而后在shellscript.sublime-build中改为如下配置</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;cmd&quot;</span> : [<span class="string">&quot;bash&quot;</span>, <span class="string">&quot;-c&quot;</span>, <span class="string">&quot;bash <span class="variable">$&#123;file_name&#125;</span>&quot;</span>],</span><br><span class="line">  <span class="string">&quot;shell&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">  <span class="string">&quot;working_dir&quot;</span>: <span class="string">&quot;<span class="variable">$&#123;file_path&#125;</span>&quot;</span>,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="python"><a href="#python" class="headerlink" title="python"></a>python</h1><p><strong>在python.sublime-build文件中改为</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line"><span class="string">&quot;cmd&quot;</span>: [<span class="string">&quot;python&quot;</span>,<span class="string">&quot;-u&quot;</span>,<span class="string">&quot;<span class="variable">$file</span>&quot;</span>],</span><br><span class="line"><span class="string">&quot;file_regex&quot;</span>: <span class="string">&quot;^[ ]*File \&quot;(...*?)\&quot;, line ([0-9]*)&quot;</span>,</span><br><span class="line"><span class="string">&quot;selector&quot;</span>: <span class="string">&quot;source.python&quot;</span>,</span><br><span class="line"><span class="string">&quot;shell&quot;</span>:<span class="string">&quot;true&quot;</span>,</span><br><span class="line"><span class="string">&quot;encoding&quot;</span>:<span class="string">&quot;cp936&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>sublime</category>
      </categories>
      <tags>
        <tag>配置环境</tag>
        <tag>bash</tag>
      </tags>
  </entry>
  <entry>
    <title>mathtype与word快捷键冲突</title>
    <url>/2021/08/05/09-00-07/</url>
    <content><![CDATA[<p><strong>mathtype和word都有ctrl+c复制键，但两者的估计是哪里的信号冲突，安装了mathtype后在word里面的ctrl+c组合键就会失效，一般的话按照默认路径是不会出事的</strong></p>
<span id="more"></span>

<p><strong>但如果你改动了路径，而且不巧遇到了冲突的情况，那就只按照这个教程来试试，说不定可以哈哈，<a href="https://blog.csdn.net/qq_39004111/article/details/106322554">原文链接</a>在这，怕作者删了，就留一份</strong></p>
<p><img src="/images/mathtype.png" alt="mathtype与word快捷键冲突"></p>
]]></content>
      <categories>
        <category>软件</category>
      </categories>
      <tags>
        <tag>answer</tag>
        <tag>word</tag>
        <tag>mathtype</tag>
      </tags>
  </entry>
  <entry>
    <title>信道基础</title>
    <url>/2021/08/06/22-26-08/</url>
    <content><![CDATA[<p><strong>对复杂信道下无线通信学习的归纳</strong></p>
<h1 id="一-无线通信系统"><a href="#一-无线通信系统" class="headerlink" title="一. 无线通信系统"></a>一. 无线通信系统</h1><p>首先看一张图也是无线系统框图</p>
<span id="more"></span>

<p><img src="/images/%E6%97%A0%E7%BA%BF%E9%80%9A%E4%BF%A1%E7%B3%BB%E7%BB%9F%E6%A1%86%E5%9B%BE.jpg" alt="无线通信系统框图"></p>
<h1 id="二-复杂信道"><a href="#二-复杂信道" class="headerlink" title="二. 复杂信道"></a>二. 复杂信道</h1><h2 id="1-加性高斯白噪声（AWGN）信道"><a href="#1-加性高斯白噪声（AWGN）信道" class="headerlink" title="(1) 加性高斯白噪声（AWGN）信道"></a>(1) 加性高斯白噪声（AWGN）信道</h2><p><strong>信道特性</strong></p>
<p>加性高斯白噪声（Additive White Gaussian Noise， AWGN）是最基本的<br>噪声模型</p>
<p>加性噪声：叠加在信号上的一种噪声，通常记为 n(t)，而且无论有无信<br>号，噪声 n(t)都是始终存在的。因此通常称它为加性噪声或者加性干扰</p>
<p>白噪声：噪声的功率谱密度在所有的频率上均为一常数，则称这样的噪<br>声为白噪声。如果白噪声取值的概率分布服从高斯分布(又称正态分布)，<br>则称这样的噪声为高斯白噪声</p>
<p>信噪比（Signal to Noise Ratio， SNR）是 AWGN 信道性能的关键指标。<br>AWGN 信道中的许多不同性能指标是 SNR 的函数，包括误码率和信道容量。<br>定义为 SNR = E<sub>x</sub> / N<sub>0</sub></p>
<h2 id="2-卫星信道"><a href="#2-卫星信道" class="headerlink" title="(2) 卫星信道"></a>(2) 卫星信道</h2><p>卫星信道充足的带宽允许通信系统以较低的码速率传输数据，数据间的符号间干扰可以忽略，信道引入的加性噪声和干扰可以用高速白噪声来建模,并且这种噪声在符号间是相互独立的，是一种典型的 AWGN信道</p>
<p>卫星信道传输距离远，由于衰减和噪声干扰的影响， 信道在传输过程中将产生畸变，如果要保证通信质量，就需要提高信噪比，但通常卫星通信系统是非实时的、功率受限的，所以必须使用相应的信道编码技术进行检错和纠错。在卫星通信系统中应用差错控制编码，不仅可以给系统提供高的可靠性和传输稳定性，同于由于编码增益的增加，系统传输信息所需的能量可大为降低，这对于功率受限的卫星信道具有重要的意义</p>
<h2 id="3-衰落信道"><a href="#3-衰落信道" class="headerlink" title="(3) 衰落信道"></a>(3) 衰落信道</h2><p><img src="/images/%E4%BF%A1%E9%81%93%E8%A1%B0%E5%BC%B1%E7%89%B9%E6%80%A7.jpg" alt="衰弱信道的分类"></p>
<h3 id="大尺度衰落"><a href="#大尺度衰落" class="headerlink" title="大尺度衰落"></a>大尺度衰落</h3><h4 id="路径损耗："><a href="#路径损耗：" class="headerlink" title="路径损耗："></a>路径损耗：</h4><ol>
<li>由空间传播造成，由发射功率的辐射扩散和信道的传播特性造成的</li>
<li>反映宏观范围内接收信号功率均值的变化  </li>
<li>理论上认为对于相同的收发距离，路径损耗也相同</li>
<li>但实际上相同距离的不同接受点上接收功率存在较大变化</li>
<li>甚至同一接受点不同时间的接收功率也有较大波动 </li>
</ol>
<h4 id="阴影效应："><a href="#阴影效应：" class="headerlink" title="阴影效应："></a>阴影效应：</h4><ol>
<li>指在无线通信系统中，移动台在运动的情况下，由于大型建筑物和其他物体对电波的传输路径的阻挡而在传播接收区域上形成半盲区，从而形成电磁场阴影。 </li>
<li><strong>这种随移动台位置的不断变化而引起的接收点场强中值的起伏变化叫做阴影效应</strong>  </li>
</ol>
<h3 id="小尺度衰落"><a href="#小尺度衰落" class="headerlink" title="小尺度衰落"></a>小尺度衰落</h3><h4 id="多径效应："><a href="#多径效应：" class="headerlink" title="多径效应："></a>多径效应：</h4><p>多径效应指电磁波经不同路径传播后，各分量场到达接收端时间不同，按各自相位相互叠加而造成干扰，使得原来的信号失真，或者产生错误。  </p>
<p>多径效应产生时延扩展（信号最快和最慢到达接收端的时差），导致多路信号叠加后产生多径衰落，对该衰落建的模有比如瑞利型衰落，指接收端信号的振幅 V(t)的一维分布服从瑞利分布（即在任意时刻 ti，V(ti)都是一个服从瑞利分布的随机值）。从频谱上看，多径效应使单一谱线变成了窄带频谱，即多径传播引起了频率弥散。   </p>
<h5 id="平坦衰落"><a href="#平坦衰落" class="headerlink" title="平坦衰落"></a>平坦衰落</h5><p>若信号带宽（如 LTE 的子载波带宽 15kHz）小于信道的相干带宽，则在信号自身的频带内经历的信道基本一样，则为平坦衰落；  </p>
<h5 id="选择性衰落"><a href="#选择性衰落" class="headerlink" title="选择性衰落"></a>选择性衰落</h5><p>反之，信号在自身的频带内不同频率经历的信道差别很大，导致不同频<br>率的衰落不同，称之为频率选择性衰落  </p>
<h5 id="消除方法"><a href="#消除方法" class="headerlink" title="消除方法"></a>消除方法</h5><p>由于多径效应的影响，信号到达时间会产生变化。由于到达时间的变化，同一载波内的符号之间会相互干扰，形成符号间干扰（ISI）。为了消除符号问干扰(ISl)，应该在符号间插入保护间隔。  </p>
<h4 id="多普勒时延"><a href="#多普勒时延" class="headerlink" title="多普勒时延"></a>多普勒时延</h4><p>多普勒效应是指随着观察者距离波源距离远近而发生的频率变化。多普勒效应带来了多普勒扩展（即多普勒频移），信道的相干时间与最大多普勒频移成反比，  </p>
<h5 id="慢衰落"><a href="#慢衰落" class="headerlink" title="慢衰落"></a>慢衰落</h5><p>若发射信号的符号周期小于相干时间，那么认为接收信号经历的是慢衰落（时间非选择性衰落）  </p>
<h5 id="快衰落"><a href="#快衰落" class="headerlink" title="快衰落"></a>快衰落</h5><p>若发射信号的符号周期大于相干时间，那么认为接收信号经历的是快衰落（时间选择性衰落）</p>
<h5 id="消除方法-1"><a href="#消除方法-1" class="headerlink" title="消除方法"></a>消除方法</h5><p>由于中心频率的频移，信号会对其他载波造成干扰，形成载波间干扰（ICI）。在 OFDM 中，为了消除 ICI，通常保护间隔是由循环前缀 CP 来充当（这样既能消除 ICI，又能消除 ISI）。  </p>
<h3 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h3><h5 id="乡村信道："><a href="#乡村信道：" class="headerlink" title="乡村信道："></a>乡村信道：</h5><p>乡村场景，地势开阔，具有山区、平原、圩区等地形。为了覆盖更多的用户，基站一般建设较远。信号经过乡村信道后，将受到地形、天气、湿度、移动台位置等因素影响。</p>
<h5 id="郊区信道："><a href="#郊区信道：" class="headerlink" title="郊区信道："></a>郊区信道：</h5><p>郊区场景，一般建筑物不像城市那么密集，但通信用户也不像乡村场景那样分散。信号经过郊区信道后，将受到 TR 距离、天气、湿度、移动台位置等因素影响。</p>
<h5 id="城市信道："><a href="#城市信道：" class="headerlink" title="城市信道："></a>城市信道：</h5><p>城市场景，建筑密集，基站覆盖广。信号经过城市信道后，将受到建筑物的反射绕射、天气、湿度、移动台位置等因素影响，产生衰落和多径。</p>
<h5 id="室内信道："><a href="#室内信道：" class="headerlink" title="室内信道："></a>室内信道：</h5><p>室内场景，研究时一般会考虑装修材料、 TR 楼层间隔等因素。 信号经过室内场景后，将因为穿过不同材料的装饰物而发生衰减、多径。同时， TR 在不同楼层时，将发生大幅度衰减  </p>
<h2 id="3-干扰信道"><a href="#3-干扰信道" class="headerlink" title="(3) 干扰信道"></a>(3) 干扰信道</h2><p><strong>人为干扰</strong>， 特别是蓄意干扰,是无线通信系统面临的最大和最直接的威胁  </p>
<p>无论是数字通信还是模拟通信， 对通信接收端的高效干扰有<strong>两种方面</strong>：</p>
<ol>
<li>一方面可以直接地表现为对通信信号的信噪比或信干噪比的有效影响,即通过干扰使其低于正常通信的最低门限即可</li>
<li>另一方面， 高效干扰的效果可以间接地表现为对通信信号在“功率-频率-时间冶三维空间的影响,即通过干扰使得在一定的时间、一定的频率上， 使用尽可能低的功率对通信信号进行有效压制。  </li>
</ol>
<h4 id="大致类别"><a href="#大致类别" class="headerlink" title="大致类别"></a>大致类别</h4><ol>
<li>采用瞬时较窄的干扰信号带宽， 以集中干扰功率对干扰目标频率进行有效压制,如<strong>部分频带干扰</strong>  </li>
<li>采用动态频率干扰以有效干扰尽可能宽的频段， 如<strong>扫频干扰</strong>  </li>
<li>采用单频率或几个频率的高速碰撞干扰， 如<strong>单音、多音干扰</strong>等等  </li>
</ol>
<h4 id="简单介绍"><a href="#简单介绍" class="headerlink" title="简单介绍"></a>简单介绍</h4><ol>
<li>单音干扰：单音干扰在频谱上表现为单/多个频点上的强干扰信号。</li>
<li>宽带干扰： 远大于系统带宽的干扰源。</li>
<li>梳状干扰： 干扰频带呈梳形的干扰信号，仅落入这此频带内的通信信号受干扰，干扰频带可为固定的或者移动的。</li>
<li>扫频干扰： 扫频干扰利用一个相对较窄的窄带信号在一定的周期内，重复扫描某个较宽的干扰频带。</li>
</ol>
<h1 id="三-通信系统性能及其评估"><a href="#三-通信系统性能及其评估" class="headerlink" title="三.通信系统性能及其评估"></a>三.通信系统性能及其评估</h1><p>通信的基本目的是及时准确地完成传递、交换信息的任务。 衡量一个无线数字通信系统性能好坏的指标有多种，但最为主要的是<strong>有效性</strong>和<strong>可靠性</strong>。</p>
<p>有效性是指传输一定信息量所占用的频带宽度，即频带利用率；</p>
<p>可靠性是指传输信息的准确程度。</p>
<p>不同的通信系统对有效性和可靠性的要求及度量方法也不尽相同。 针对数字通信系统， 通常可以从误码率、 频带利用率、对信道的适应能力等几个方面进行性能评估。  </p>
<h2 id="1-抗噪声性能"><a href="#1-抗噪声性能" class="headerlink" title="(1) 抗噪声性能"></a>(1) 抗噪声性能</h2><p>通信系统的抗噪声性能是指系统克服加性白噪声影响的能力。 分析条件：假设信道特性是恒参信道，在信号的频带范围内具有理想矩形的传输特性（可取其传输系数为 K） ； 信道噪声是加性高斯白噪声。并且认为噪声只对信号的接收带来影响，因而分析系统性能是在接收端进行的。  </p>
<h2 id="2-误码率"><a href="#2-误码率" class="headerlink" title="(2) 误码率"></a>(2) 误码率</h2><p>误码率是衡量一个通信系统性能的重要指标。 在数字无线通信系统中，信道噪声及干扰有可能使传输码元产生错误， 而错误程度通常用误码率来衡量。 在信道高斯白噪声的干扰下，各种数字调制系统的误码率取决于解调端的输入信噪比，而误码率表达式的形式则取决于解调方式 </p>
<p>相干解调为互补误差函数 ,如下图，非相干解调时，为指数函数形式。  </p>
<p><img src="/images/tex1.png"></p>
<p>常见的数字调制系统 ASK、 FSK、 PSK、 DPSK、 MPSK、 MDPSK 的误码率计算<br>公式如表 1 所示。 表中的误码率公式是在以下前提条件下得到。</p>
<ol>
<li>二进制数字信号“1” 和“0” 是独立且等概率出现的；</li>
<li>信道加性噪声n(t)是零均值高斯白噪声，单边功率谱密度为n<sub>0</sub>, 信道参数恒定；</li>
<li>通过接收滤波器后的噪声为窄带高斯噪声， 其均值为零，方差为σ<sup>2</sup><sub>n</sub>;</li>
<li>由接收滤波器引起的码间串扰很小，忽略不计；  </li>
<li>接收端产生的相干载波的相位差为 0。  </li>
</ol>
<h3 id="计算公式"><a href="#计算公式" class="headerlink" title="计算公式"></a>计算公式</h3><p><img src="/images/%E6%95%B0%E5%AD%97%E8%A7%A3%E8%B0%83%E8%AF%AF%E7%A0%81%E7%8E%87%E8%AE%A1%E7%AE%97%E5%85%AC%E5%BC%8F.jpg"></p>
<h1 id="四-无线通信系统反向设计"><a href="#四-无线通信系统反向设计" class="headerlink" title="四. 无线通信系统反向设计"></a>四. 无线通信系统反向设计</h1><p>无线通信系统的设计是工程应用中面临的一个基本问题。 基于不同的无线信道特性，考虑系统性能要求， 需要反向考虑和设计无线通信系统中的各个模块。  </p>
<p><strong>针对通信系统的有效性，需要考虑信源编码模块的设计。</strong></p>
<h2 id="信源编码"><a href="#信源编码" class="headerlink" title="信源编码"></a>信源编码</h2><ol>
<li>设法减少码元数目和降低码元速率，即通常所说的数据压缩。码元速率将直接影响传输所占的带宽，而传输带宽又直接反映了通信的有效性  </li>
<li>当信息源给出的是模拟语音信号时，信源编码器将其转换成数字信号，以实现模<br>拟信号的<strong>数字化传输</strong> </li>
</ol>
<h2 id="数字化传输"><a href="#数字化传输" class="headerlink" title="数字化传输"></a>数字化传输</h2><h3 id="脉冲编码调制-PCM"><a href="#脉冲编码调制-PCM" class="headerlink" title="脉冲编码调制(PCM)"></a>脉冲编码调制(PCM)</h3><p>简称脉码调制:一种用一组二进制数字代码来代替连续信号的抽样值，从而实现通信的方式。由于这种通信方式抗干扰能力强，它在光纤通信、数字微波通信、卫星通信中均获得了极为广泛的应用  </p>
<h3 id="增量调制-ΔM"><a href="#增量调制-ΔM" class="headerlink" title="增量调制(ΔM)"></a>增量调制(ΔM)</h3><p>将差值编码传输，同样可传输模拟信号所含的信息。此差值又称“增量” ，其值可正可负。这种用差值编码进行通信的方式，就称为“增量调制” ，缩写为 DM 或 ΔM，主要用于军方通信中。信源编码为了减少信源输出符号序列中的剩余度、提高符号的平均信息量，对信源输出的符号序列所施行的变换  </p>
<p><strong>数字化传输具体来说就是针对信源输出符号序列的统计特性来寻找某种方法，把信源输出符号序列变换为最短的码字序列，使后者的各码元所载荷的平均信息量最大，同时又能保证无失真地恢复原来的符号序列</strong> </p>
<h3 id="消除干扰"><a href="#消除干扰" class="headerlink" title="消除干扰"></a>消除干扰</h3><p>信道编码数字信号在信道传输时，由于噪声、衰落以及人为干扰等，将会引起差错。为了减少差错，信道编码器对传输的信息码元按一定的规则加入保护成分（监督元），组成所谓“抗干扰编码”。接收端的信道译码器按一定规则进行解码，从解码过程中发现错误或纠正错误，从而提高通信系统抗干扰能力，实现可靠通信。信道编码是针对无线信道的干扰太多，把你要传送的数据加上些信息，来纠正信道的干扰。  </p>
<p>值得注意的是，信源编码和信道编码并不是单独分离的两个模块，他们对于通信<br>系统的影响是相辅相成的，因此在进行实际通信系统的设计时，需要找到两种编<br>码方案的折中，兼顾系统的有效性和可靠性。  </p>
]]></content>
      <categories>
        <category>通信工程</category>
      </categories>
      <tags>
        <tag>大学</tag>
      </tags>
  </entry>
  <entry>
    <title>电脑综合记录</title>
    <url>/2021/08/06/22-31-10/</url>
    <content><![CDATA[<p>Windows里面有好多东西想自己定制，为此不免要涉及到好多系统对应的<br>源文件，在这里稍微整理一下，欢迎讨论补充</p>
<span id="more"></span>

<h1 id="一-注册表"><a href="#一-注册表" class="headerlink" title="一.注册表"></a>一.注册表</h1><h2 id="1-桌面右键新建"><a href="#1-桌面右键新建" class="headerlink" title="1. 桌面右键新建"></a>1. 桌面右键新建</h2><p>添加鼠标右键新建项：对应单击桌面空白处，新建菜单中的项目对应注册表<br>中的位置 ：</p>
<p>HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion<br>Explorer\Discardable\PostSetup\ShellNew</p>
<h2 id="2-桌面右键菜单"><a href="#2-桌面右键菜单" class="headerlink" title="2. 桌面右键菜单"></a>2. 桌面右键菜单</h2><p>鼠标单击桌面：桌面空白处点击右键菜单对应注册表位置：</p>
<p>HKEY_CLASSES_ROOT\Directory\Background\shellex<br>ContextMenuHandlers</p>
<h2 id="3-文件右键菜单"><a href="#3-文件右键菜单" class="headerlink" title="3. 文件右键菜单"></a>3. 文件右键菜单</h2><p>右键单击文件：鼠标右键文件，弹出的菜单项对应注册表中的位置：</p>
<p>HKEY_CLASSES_ROOT*\shellex\ContextMenuHandlers</p>
<h2 id="4-文件夹右键菜单"><a href="#4-文件夹右键菜单" class="headerlink" title="4. 文件夹右键菜单"></a>4. 文件夹右键菜单</h2><p>单击文件夹：鼠标右键文件夹，弹出的菜单项对应注册表中的位置：</p>
<p>HKEY_CLASSES_ROOT\Directory\shellex\ContextMenuHandlers</p>
<h2 id="5-IE浏览器右键"><a href="#5-IE浏览器右键" class="headerlink" title="5. IE浏览器右键"></a>5. IE浏览器右键</h2><p>鼠标单击ie浏览器里：鼠标右键在IE浏览器里，弹出的菜单明细对应注册<br>表中的位置：</p>
<p>HKEY_CURRENT_USER\Software\Microsoft\Internet Explorer<br>MenuExt</p>
<h1 id="全局快捷键"><a href="#全局快捷键" class="headerlink" title="全局快捷键"></a>全局快捷键</h1><p>顾名思义就是无论你在那个应用程序里面正在干着什么事(除了关机)，都能<br>通过快捷键进行调用</p>
<p>主要步骤如下</p>
<ol>
<li>首先win+r打开运行，在里面输入control打开控制面板</li>
<li>搜索并打开管理工具，这时会打开一个文件夹，先放在这别关</li>
<li>在桌面右键新建一个快捷方式，指向你希望快捷键打开的程序</li>
<li>然后对该快捷方式右键属性，点中快捷键框，在键盘上按下<br> 你想定义的快捷键，这时基本上就算成功了，之前没要管理员程序<br> 所以还有第五步，如果要了第五步就可以省了，自己找个文件夹藏着<br> 还有记得不要与系统快捷键冲突</li>
<li>然后将该快捷方式拖入你第二步打开的那个文件夹里，大功告成</li>
</ol>
<h1 id="特殊文件夹"><a href="#特殊文件夹" class="headerlink" title="特殊文件夹"></a>特殊文件夹</h1><p><strong>windows里有一些不为人知的文件夹，命名的名字为它时能触发菜单哟</strong></p>
<ol>
<li>上帝模式，命名为这个时可以管控电脑上几乎所有设置如下：<br> <strong>.{ED7BA470-8E54-465E-825C-99712043E01C}</strong><br> 自己新建一个文件夹命名为它试试看</li>
</ol>
<h1 id="电池计划"><a href="#电池计划" class="headerlink" title="电池计划"></a>电池计划</h1><p><strong>其实电池除了开发商提供的最佳性能外，<br>微软本身也提供了高级电池选项，下面是卓越模式的开启方法</strong></p>
<ol>
<li>win+r 输入powershell</li>
<li>在powershell里面输入<br> <strong>powercfg -duplicatescheme e9a42b02-d5df-448d-aa00-03f14749eb61</strong><br> 以打开卓越模式</li>
</ol>
<h1 id="转换分区引导"><a href="#转换分区引导" class="headerlink" title="转换分区引导"></a>转换分区引导</h1><ol>
<li>legacy引导对应MBR分区的磁盘（性能较差）</li>
<li>UEFI引导对应GPT分区的磁盘（性能较好）</li>
<li>需要开机进入某个模式(应该是高级bios)后shift+F10打开cmd<br> 后依次输入<br> a. Diskpart<br> b. lisk disk<br> c. select disk 0(选中所要改变格式的磁盘)<br> d. clean(清空磁盘全部分区)<br> e. convert GPT    </li>
</ol>
]]></content>
      <categories>
        <category>windows</category>
      </categories>
      <tags>
        <tag>配置环境</tag>
      </tags>
  </entry>
  <entry>
    <title>mysql数据类型</title>
    <url>/2021/08/08/16-09-31/</url>
    <content><![CDATA[<h1 id="一-整数类型"><a href="#一-整数类型" class="headerlink" title="一.整数类型"></a>一.整数类型</h1><p>MySQL 主要提供的整数类型有 <strong>TINYINT</strong>、<strong>SMALLINT</strong>、<strong>MEDIUMINT</strong>、<strong>INT</strong>、<strong>BIGINT</strong>，其属性字段可以添加 AUTO_INCREMENT 自增约束条件。下表中列出了 MySQL 中的数值类型。</p>
<span id="more"></span>

<table>
<thead>
<tr>
<th>类型名称</th>
<th>说明</th>
<th>存储需求</th>
</tr>
</thead>
<tbody><tr>
<td>TINYINT</td>
<td>很小的整数-128〜127   (2<sup>7</sup>-1)</td>
<td>1个字节(8bit)  0~ 2<sup>8</sup>-1</td>
</tr>
<tr>
<td>SMALLINT</td>
<td>小的整数</td>
<td>2个宇节</td>
</tr>
<tr>
<td>MEDIUMINT</td>
<td>中等大小的整数</td>
<td>3个字节</td>
</tr>
<tr>
<td>INT (INTEGER)</td>
<td>普通大小的整数</td>
<td>4个字节</td>
</tr>
<tr>
<td>BIGINT</td>
<td>大整数</td>
<td>8个字节</td>
</tr>
</tbody></table>
<h1 id="二-小数类型"><a href="#二-小数类型" class="headerlink" title="二.小数类型"></a>二.小数类型</h1><p>mysql中使用浮点数和定点数来表示小数浮点类型有两种，分别是单精度浮点数（<strong>FLOAT</strong>）和双精度浮点数（<strong>DOUBLE</strong>）；定点类型只有一种，就是 <strong>DECIMAL</strong>。浮点类型和定点类型都可以用(M, D)来表示，其中M称为精度，表示总共的位数；D称为标度，表示小数的位数</p>
<p>浮点数类型的取值范围为 M（1～255）和 D（1～30，且不能大于 M-2），分别表示显示宽度和小数位数。M 和 D 在 FLOAT 和DOUBLE 中是可选的，FLOAT 和 DOUBLE 类型将被保存为硬件所支持的最大精度。DECIMAL 的默认 D 值为 0、M 值为 10。</p>
<p>下表中列出了 MySQL 中的小数类型和存储需求。</p>
<table>
<thead>
<tr>
<th>类型名称</th>
<th>说明</th>
<th>存储需求</th>
</tr>
</thead>
<tbody><tr>
<td>FLOAT</td>
<td>单精度浮点数</td>
<td>4个字节</td>
</tr>
<tr>
<td>DOUBLE</td>
<td>双精度浮点数</td>
<td>8 个字节</td>
</tr>
<tr>
<td>DECIMAL (M, D)，DEC</td>
<td>压缩的“严格”定点数</td>
<td>M+2 个字节</td>
</tr>
</tbody></table>
<p>DECIMAL 类型不同于 FLOAT 和 DOUBLE。DOUBLE 实际上是以字符串的形式存放的，DECIMAL 可能的最大取值范围与 DOUBLE 相同，但是有效的取值范围由 M 和 D 决定。如果改变 M 而固定 D，则取值范围将随 M 的变大而变大</p>
<p>从上表中可以看到，DECIMAL 的存储空间并不是固定的，而由精度值 M 决定，占用 M+2 个字节。</p>
<p>FLOAT 类型的取值范围如下：</p>
<ul>
<li>有符号的取值范围：-3.402823466E+38～-1.175494351E-38。</li>
<li>无符号的取值范围：0 和 -1.175494351E-38～-3.402823466E+38。</li>
</ul>
<p>DOUBLE 类型的取值范围如下：</p>
<ul>
<li>有符号的取值范围：-1.7976931348623157E+308～-2.2250738585072014E-308。</li>
<li>无符号的取值范围：0 和 -2.2250738585072014E-308～-1.7976931348623157E+308。</li>
</ul>
<blockquote>
<p>提示：不论是定点还是浮点类型，如果用户指定的精度超出精度范围，则会四舍五入进行处理。</p>
</blockquote>
<h1 id="三-日期和时间类型"><a href="#三-日期和时间类型" class="headerlink" title="三. 日期和时间类型"></a>三. 日期和时间类型</h1><p>MySQL中有多处表示日期的数据类型：<strong>YEAR</strong>、<strong>TIME</strong>、<strong>DATE</strong>、<strong>DTAETIME</strong>、<strong>TIMESTAMP</strong>。当只记录年信息的时候，可以只使用 YEAR 类型。</p>
<p>每一个类型都有合法的取值范围，当指定确定不合法的值时，系统将“零”值插入数据库中。</p>
<p>下表中列出了 MySQL 中的日期与时间类型。</p>
<table>
<thead>
<tr>
<th>类型名称</th>
<th>日期格式</th>
<th>日期范围</th>
<th>存储需求</th>
</tr>
</thead>
<tbody><tr>
<td>YEAR</td>
<td>YYYY</td>
<td>1901 ~ 2155</td>
<td>1 个字节</td>
</tr>
<tr>
<td>TIME</td>
<td>HH:MM:SS</td>
<td>-838:59:59 ~ 838:59:59</td>
<td>3 个字节</td>
</tr>
<tr>
<td>DATE</td>
<td>YYYY-MM-DD</td>
<td>1000-01-01 ~ 9999-12-3</td>
<td>3 个字节</td>
</tr>
<tr>
<td>DATETIME</td>
<td>YYYY-MM-DD HH:MM:SS</td>
<td>1000-01-01 00:00:00 ~ 9999-12-31 23:59:59</td>
<td>8 个字节</td>
</tr>
<tr>
<td>TIMESTAMP</td>
<td>YYYY-MM-DD HH:MM:SS</td>
<td>1980-01-01 00:00:01 UTC ~ 2040-01-19 03:14:07 UTC</td>
<td>4 个字节</td>
</tr>
</tbody></table>
<h2 id="YEAR-类型"><a href="#YEAR-类型" class="headerlink" title="YEAR 类型"></a>YEAR 类型</h2><p>YEAR 类型是一个单字节类型，用于表示年，在存储时只需要 1 个字节。可以使用各种格式指定 YEAR，如下所示：</p>
<ul>
<li>以 4 位字符串或者 4 位数字格式表示的 YEAR，范围为 ‘1901’～’2155’。输入格式为 ‘YYYY’ 或者 YYYY，例如，输入 ‘2010’ 或 2010，插入数据库的值均为 2010。</li>
<li>以 2 位字符串格式表示的 YEAR，范围为 ‘00’ 到 ‘99’。’00’～’69’ 和 ‘70’～’99’ 范围的值分别被转换为 2000～2069 和 1970～1999 范围的 YEAR 值。’0’ 与 ‘00’ 的作用相同。插入超过取值范围的值将被转换为 2000。</li>
<li>以 2 位数字表示的 YEAR，范围为 1～99。1～99 和 70～99 范围的值分别被转换为 2001～2069 和 1970～1999 范围的 YEAR 值。注意，在这里 0 值将被转换为 0000，而不是 2000。</li>
</ul>
<blockquote>
<p>提示：两位整数范围与两位字符串范围稍有不同。例如，插入 3000 年，读者可能会使用数字格式的 0 表示 YEAR，实际上，插入数据库的值为 0000，而不是所希望的 3000。只有使用字符串格式的 ‘0’ 或 ‘00’，才可以被正确解释为 3000，非法 YEAR值将被转换为 0000。</p>
</blockquote>
<h2 id="TIME-类型"><a href="#TIME-类型" class="headerlink" title="TIME 类型"></a>TIME 类型</h2><p>TIME 类型用于只需要时间信息的值，在存储时需要 3 个字节。格式为 HH:MM:SS。HH 表示小时，MM 表示分钟，SS 表示秒。</p>
<p>TIME 类型的取值范围为 -838：59：59～838：59：59，小时部分如此大的原因是 TIME 类型不仅可以用于表示一天的时间（必须小于 24 小时），还可能是某个事件过去的时间或两个事件之间的时间间隔（可大于 24 小时，或者甚至为负）。</p>
<p>可以使用各种格式指定 TIME 值，如下所示。</p>
<ul>
<li>‘D HH：MM：SS’ 格式的字符串。还可以使用这些“非严格”的语法：’HH：MM：SS’、’HH：MM’、’D HH’ 或 ‘SS’。这里的 D 表示日，可以取 0～34 之间的值。在插入数据库时，D 被转换为小时保存，格式为 “D*24+HH”。</li>
<li>‘HHMMSS’ 格式、没有间隔符的字符串或者 HHMMSS 格式的数值，假定是有意义的时间。例如，’101112’ 被理解为’10：11：12’，但是 ‘106112’ 是不合法的（它有一个没有意义的分钟部分），在存储时将变为 00：00：00。</li>
</ul>
<blockquote>
<p>提示：为 TIME 列分配简写值时应注意：如果没有冒号，MySQL 解释值时，假定最右边的两位表示秒。（MySQL 解释 TIME 值为过去的时间而不是当前的时间）。例如，读者可能认为 ‘1112’ 和 1112 表示 11：12：00（即 11 点过 12 分钟），但MySQL 将它们解释为 00：11：12（即 11 分 12 秒）。同样 ‘12’ 和 12 被解释为00：00：12。相反，TIME 值中如果使用冒号则肯定被看作当天的时间，也就是说，’11：12’ 表示 11：12：00，而不是 00：11：12。</p>
</blockquote>
<h2 id="DATE-类型"><a href="#DATE-类型" class="headerlink" title="DATE 类型"></a>DATE 类型</h2><p>DATE 类型用于仅需要日期值时，没有时间部分，在存储时需要 3 个字节。日期格式为 ‘YYYY-MM-DD’，其中 YYYY 表示年，MM 表示月，DD 表示日。</p>
<p>在给 DATE 类型的字段赋值时，可以使用字符串类型或者数字类型的数据插入，只要符合 DATE 的日期格式即可。如下所示：</p>
<ul>
<li>以 ‘YYYY-MM-DD’ 或者 ‘YYYYMMDD’ 字符中格式表示的日期，取值范围为 ‘1000-01-01’～’9999-12-3’。例如，输入 ‘2015-12-31’ 或者 ‘20151231’，插入数据库的日期为2015-12-31。</li>
<li>以 ‘YY-MM-DD’ 或者 ‘YYMMDD’ 字符串格式表示日期，在这里YY表示两位的年值。MySQL 解释两位年值的规则：’00～69’ 范围的年值转换为 ‘2000<del>2069’，’70</del>99’ 范围的年值转换为 ‘1970～1999’。例如，输入 ‘15-12-31’，插入数据库的日期为 2015-12-31；输入 ‘991231’，插入数据库的日期为 1999-12-31。</li>
<li>以 YYMMDD 数字格式表示的日期，与前面相似，00~69 范围的年值转换为 2000～2069，80～99 范围的年值转换为 1980～1999。例如，输入 151231，插入数据库的日期为 2015-12-31，输入 991231，插入数据库的日期为 1999-12-31。</li>
<li>使用 CURRENT_DATE 或者 NOW()，插入当前系统日期。</li>
</ul>
<blockquote>
<p>提示：MySQL 允许“不严格”语法：任何标点符号都可以用作日期部分之间的间隔符。例如，’98-11-31’、’98.11.31’、’98/11/31’和‘98@11@31’ 是等价的，这些值也可以正确地插入数据库。</p>
</blockquote>
<h2 id="DATETIME-类型"><a href="#DATETIME-类型" class="headerlink" title="DATETIME 类型"></a>DATETIME 类型</h2><p>DATETIME 类型用于需要同时包含日期和时间信息的值，在存储时需要 8 个字节。日期格式为 ‘YYYY-MM-DD HH：MM：SS’，其中 YYYY 表示年，MM 表示月，DD 表示日，HH 表示小时，MM 表示分钟，SS 表示秒。</p>
<p>在给 DATETIME 类型的字段赋值时，可以使用字符串类型或者数字类型的数据插入，只要符合 DATETIME 的日期格式即可，如下所示。</p>
<ul>
<li>以 ‘YYYY-MM-DD HH：MM：SS’ 或者 ‘YYYYMMDDHHMMSS’ 字符串格式表示的日期，取值范围为 ‘1000-01-01 00：00：00’～’9999-12-3 23：59：59’。例如，输入 ‘2014-12-31 05：05：05’ 或者 ‘20141231050505’，插入数据库的 DATETIME 值都为 2014-12-31 05：05：05。</li>
<li>以 ‘YY-MM-DD HH：MM：SS’ 或者 ‘YYMMDDHHMMSS’ 字符串格式表示的日期，在这里 YY 表示两位的年值。与前面相同，’00～79’ 范围的年值转换为 ‘2000～2079’，’80～99’ 范围的年值转换为 ‘1980～1999’。例如，输入 ‘14-12-31 05：05：05’，插入数据库的 DATETIME 为 2014-12-31 05：05：05；输入 141231050505，插入数据库的 DATETIME 为 2014-12-31 05：05：05。</li>
<li>以 YYYYMMDDHHMMSS 或者 YYMMDDHHMMSS 数字格式表示的日期和时间。例如，输入 20141231050505，插入数据库的 DATETIME 为 2014-12-31 05：05：05；输入 140505050505，插入数据库的 DATETIME 为 2014-12-31 05：05：05。</li>
</ul>
<blockquote>
<p>提示：MySQL 允许“不严格”语法：任何标点符号都可用作日期部分或时间部分之间的间隔符。例如，’98-12-31 11：30：45’、’98.12.31 11+30+35’、’98/12/31 11<em>30</em>45’ 和 ‘98@12@31 11^30^45’ 是等价的，这些值都可以正确地插入数据库。</p>
</blockquote>
<h2 id="TIMESTAMP-类型"><a href="#TIMESTAMP-类型" class="headerlink" title="TIMESTAMP 类型"></a>TIMESTAMP 类型</h2><p>TIMESTAMP 的显示格式与 DATETIME 相同，显示宽度固定在 19 个字符，日期格式为 YYYY-MM-DD HH：MM：SS，在存储时需要 4 个字节。但是 TIMESTAMP 列的取值范围小于 DATETIME 的取值范围，为 ‘1970-01-01 00：00：01’UTC～’2038-01-19 03：14：07’UTC。在插入数据时，要保证在合法的取值范围内。</p>
<blockquote>
<p>提示：协调世界时（英：Coordinated Universal Time，法：Temps Universel Coordonné）又称为世界统一时间、世界标准时间、国际协调时间。英文（CUT）和法文（TUC）的缩写不同，作为妥协，简称 UTC。</p>
</blockquote>
<p>TIMESTAMP 与 DATETIME 除了存储字节和支持的范围不同外，还有一个最大的区别是：</p>
<ul>
<li>DATETIME 在存储日期数据时，按实际输入的格式存储，即输入什么就存储什么，与时区无关；</li>
<li>而 TIMESTAMP 值的存储是以 UTC（世界标准时间）格式保存的，存储时对当前时区进行转换，检索时再转换回当前时区。即查询时，根据当前时区的不同，显示的时间值是不同的。</li>
</ul>
<blockquote>
<p>提示：如果为一个 DATETIME 或 TIMESTAMP 对象分配一个 DATE 值，结果值的时间部分被设置为 ‘00：00：00’，因此 DATE 值未包含时间信息。如果为一个 DATE 对象分配一个 DATETIME 或 TIMESTAMP 值，结果值的时间部分被删除，因此DATE 值未包含时间信息。</p>
</blockquote>
<h1 id="四-字符串类型"><a href="#四-字符串类型" class="headerlink" title="四. 字符串类型"></a>四. 字符串类型</h1><p>字符串类型用来存储字符串数据，还可以存储图片和声音的二进制数据。字符串可以区分或者不区分大小写的串比较，还可以进行正则表达式的匹配查找。</p>
<p><a href="http://c.biancheng.net/mysql/">MySQL</a> 中的字符串类型有 <strong>CHAR</strong>、<strong>VARCHAR</strong>、<strong>TINYTEXT</strong>、<strong>TEXT</strong>、<strong>MEDIUMTEXT</strong>、<strong>LONGTEXT</strong>、<strong>ENUM</strong>、<strong>SET</strong> 等。</p>
<p>下表中列出了 MySQL 中的字符串数据类型，括号中的<code>M</code>表示可以为其指定长度。</p>
<table>
<thead>
<tr>
<th>类型名称</th>
<th>说明</th>
<th>存储需求</th>
</tr>
</thead>
<tbody><tr>
<td>CHAR(M)</td>
<td>固定长度非二进制字符串</td>
<td>M 字节，1&lt;=M&lt;=255</td>
</tr>
<tr>
<td>VARCHAR(M)</td>
<td>变长非二进制字符串</td>
<td>L+1字节，在此，L&lt; = M和 1&lt;=M&lt;=255</td>
</tr>
<tr>
<td>TINYTEXT</td>
<td>非常小的非二进制字符串</td>
<td>L+1字节，在此，L&lt;2^8</td>
</tr>
<tr>
<td>TEXT</td>
<td>小的非二进制字符串</td>
<td>L+2字节，在此，L&lt;2^16</td>
</tr>
<tr>
<td>MEDIUMTEXT</td>
<td>中等大小的非二进制字符串</td>
<td>L+3字节，在此，L&lt;2^24</td>
</tr>
<tr>
<td>LONGTEXT</td>
<td>大的非二进制字符串</td>
<td>L+4字节，在此，L&lt;2^32</td>
</tr>
<tr>
<td>ENUM</td>
<td>枚举类型，只能有一个枚举字符串值</td>
<td>1或2个字节，取决于枚举值的数目 (最大值为65535)</td>
</tr>
<tr>
<td>SET</td>
<td>一个设置，字符串对象可以有零个或 多个SET成员</td>
<td>1、2、3、4或8个字节，取决于集合 成员的数量（最多64个成员）</td>
</tr>
</tbody></table>
<p>VARCHAR 和 TEXT 类型是变长类型，其存储需求取决于列值的实际长度（在前面的表格中用 L 表示），而不是取决于类型的最大可能尺寸。</p>
<p>例如，一个 VARCHAR(10) 列能保存一个最大长度为 10 个字符的字符串，实际的存储需要字符串的长度 L 加上一个字节以记录字符串的长度。对于字符 “abcd”，L 是 4，而存储要求 5 个字节。</p>
<h2 id="CHAR-和-VARCHAR-类型"><a href="#CHAR-和-VARCHAR-类型" class="headerlink" title="CHAR 和 VARCHAR 类型"></a>CHAR 和 VARCHAR 类型</h2><p>CHAR(M) 为固定长度字符串，在定义时指定字符串列长。当保存时，在右侧填充空格以达到指定的长度。M 表示列的长度，范围是 0～255 个字符。</p>
<p>例如，CHAR(4) 定义了一个固定长度的字符串列，包含的字符个数最大为 4。当检索到 CHAR 值时，尾部的空格将被删除。</p>
<p>VARCHAR(M) 是长度可变的字符串，M 表示最大列的长度，M 的范围是 0～65535。VARCHAR 的最大实际长度由最长的行的大小和使用的字符集确定，而实际占用的空间为字符串的实际长度加 1。</p>
<p>例如，VARCHAR(50) 定义了一个最大长度为 50 的字符串，如果插入的字符串只有 10 个字符，则实际存储的字符串为 10 个字符和一个字符串结束字符。VARCHAR 在值保存和检索时尾部的空格仍保留。</p>
<p>【实例】下面将不同的字符串保存到 CHAR(4) 和 VARCHAR(4) 列，说明 CHAR 和 VARCHAR 之间的差别，如下表所示。</p>
<table>
<thead>
<tr>
<th>插入值</th>
<th>CHAR(4)</th>
<th>存储需求</th>
<th>VARCHAR(4)</th>
<th>存储需求</th>
</tr>
</thead>
<tbody><tr>
<td>‘ ‘</td>
<td>‘  ‘</td>
<td>4字节</td>
<td>‘’</td>
<td>1字节</td>
</tr>
<tr>
<td>‘ab’</td>
<td>‘ab ‘</td>
<td>4字节</td>
<td>‘ab’</td>
<td>3字节</td>
</tr>
<tr>
<td>‘abc’</td>
<td>‘abc ‘</td>
<td>4字节</td>
<td>‘abc’</td>
<td>4字节</td>
</tr>
<tr>
<td>‘abcd’</td>
<td>‘abcd’</td>
<td>4字节</td>
<td>‘abcd’</td>
<td>5字节</td>
</tr>
<tr>
<td>‘abcdef’</td>
<td>‘abcd’</td>
<td>4字节</td>
<td>‘abcd’</td>
<td>5字节</td>
</tr>
</tbody></table>
<p>对比结果可以看到，CHAR(4) 定义了固定长度为 4 的列，无论存入的数据长度为多少，所占用的空间均为 4 个字节。VARCHAR(4) 定义的列所占的字节数为实际长度加 1。</p>
<h2 id="TEXT-类型"><a href="#TEXT-类型" class="headerlink" title="TEXT 类型"></a>TEXT 类型</h2><p>TEXT 列保存非二进制字符串，如文章内容、评论等。当保存或查询 TEXT 列的值时，不删除尾部空格。</p>
<p>TEXT 类型分为 4 种：TINYTEXT、TEXT、MEDIUMTEXT 和 LONGTEXT。不同的 TEXT 类型的存储空间和数据长度不同。</p>
<ul>
<li>TINYTEXT 表示长度为 255（28-1）字符的 TEXT 列。</li>
<li>TEXT 表示长度为 65535（216-1）字符的 TEXT 列。</li>
<li>MEDIUMTEXT 表示长度为 16777215（224-1）字符的 TEXT 列。</li>
<li>LONGTEXT 表示长度为 4294967295 或 4GB（232-1）字符的 TEXT 列。</li>
</ul>
<h2 id="ENUM-类型"><a href="#ENUM-类型" class="headerlink" title="ENUM 类型"></a>ENUM 类型</h2><p>ENUM 是一个字符串对象，值为表创建时列规定中枚举的一列值。其语法格式如下：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;字段名&gt; ENUM( &#x27;值1&#x27;, &#x27;值1&#x27;, …, &#x27;值n&#x27; )</span><br></pre></td></tr></table></figure>

<p>字段名指将要定义的字段，值 n 指枚举列表中第 n 个值。</p>
<p>ENUM 类型的字段在取值时，能在指定的枚举列表中获取，而且一次只能取一个。如果创建的成员中有空格，尾部的空格将自动被删除。</p>
<p>ENUM 值在内部用整数表示，每个枚举值均有一个索引值；列表值所允许的成员值从 1 开始编号，MySQL 存储的就是这个索引编号，枚举最多可以有 65535 个元素。</p>
<p>例如，定义 ENUM 类型的列（’first’，’second’，’third’），该列可以取的值和每个值的索引如下表所示。</p>
<table>
<thead>
<tr>
<th>值</th>
<th>索引</th>
</tr>
</thead>
<tbody><tr>
<td>NULL</td>
<td>NULL</td>
</tr>
<tr>
<td>‘’</td>
<td>0</td>
</tr>
<tr>
<td>’first</td>
<td>1</td>
</tr>
<tr>
<td>second</td>
<td>2</td>
</tr>
<tr>
<td>third</td>
<td>3</td>
</tr>
</tbody></table>
<p>ENUM 值依照列索引顺序排列，并且空字符串排在非空字符串前，NULL 值排在其他所有枚举值前</p>
<blockquote>
<p>提示：ENUM 列总有一个默认值。如果将 ENUM 列声明为 NULL，NULL 值则为该列的一个有效值，并且默认值为 NULL。如果 ENUM 列被声明为 NOT NULL，其默认值为允许的值列表的第 1 个元素</p>
</blockquote>
<h2 id="SET-类型"><a href="#SET-类型" class="headerlink" title="SET 类型"></a>SET 类型</h2><p>SET 是一个字符串的对象，可以有零或多个值，SET 列最多可以有 64 个成员，值为表创建时规定的一列值。指定包括多个 SET 成员的 SET 列值时，各成员之间用逗号<code>,</code>隔开，语法格式如下：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SET( &#x27;值1&#x27;, &#x27;值2&#x27;, …, &#x27;值n&#x27; )</span><br></pre></td></tr></table></figure>

<p>与 ENUM 类型相同，SET 值在内部用整数表示，列表中每个值都有一个索引编号。当创建表时，SET 成员值的尾部空格将自动删除。</p>
<p>但与 ENUM 类型不同的是，ENUM 类型的字段只能从定义的列值中选择一个值插入，而 SET 类型的列可从定义的列值中选择多个字符的联合。</p>
<blockquote>
<p>提示：如果插入 SET 字段中的列值有重复，则 MySQL 自动删除重复的值；插入 SET 字段的值的顺序并不重要，MySQL 会在存入数据库时，按照定义的顺序显示；如果插入了不正确的值，默认情况下，MySQL 将忽视这些值，给出警告。</p>
</blockquote>
<h1 id="五-二进制类型"><a href="#五-二进制类型" class="headerlink" title="五. 二进制类型"></a>五. 二进制类型</h1><p>MySQL 中的二进制字符串有 <strong>BIT</strong>、<strong>BINARY</strong>、<strong>VARBINARY</strong>、<strong>TINYBLOB</strong>、<strong>BLOB</strong>、<strong>MEDIUMBLOB</strong> 和 <strong>LONGBLOB</strong>。</p>
<p>下表中列出了 MySQL 中的二进制数据类型，括号中的<code>M</code>表示可以为其指定长度。</p>
<table>
<thead>
<tr>
<th>类型名称</th>
<th>说明</th>
<th>存储需求</th>
</tr>
</thead>
<tbody><tr>
<td>BIT(M)</td>
<td>位字段类型</td>
<td>大约 (M+7)/8 字节</td>
</tr>
<tr>
<td>BINARY(M)</td>
<td>固定长度二进制字符串</td>
<td>M 字节</td>
</tr>
<tr>
<td>VARBINARY (M)</td>
<td>可变长度二进制字符串</td>
<td>M+1 字节</td>
</tr>
<tr>
<td>TINYBLOB (M)</td>
<td>非常小的BLOB</td>
<td>L+1 字节，在此，L&lt;2^8</td>
</tr>
<tr>
<td>BLOB (M)</td>
<td>小 BLOB</td>
<td>L+2 字节，在此，L&lt;2^16</td>
</tr>
<tr>
<td>MEDIUMBLOB (M)</td>
<td>中等大小的BLOB</td>
<td>L+3 字节，在此，L&lt;2^24</td>
</tr>
<tr>
<td>LONGBLOB (M)</td>
<td>非常大的BLOB</td>
<td>L+4 字节，在此，L&lt;2^32</td>
</tr>
</tbody></table>
<h2 id="BIT-类型"><a href="#BIT-类型" class="headerlink" title="BIT 类型"></a>BIT 类型</h2><p>位字段类型。M 表示每个值的位数，范围为 1～64。如果 M 被省略，默认值为 1。如果为 BIT(M) 列分配的值的长度小于 M 位，在值的左边用 0 填充。例如，为 BIT(6) 列分配一个值 b’101’，其效果与分配 b’000101’ 相同。</p>
<p>BIT 数据类型用来保存位字段值，例如以二进制的形式保存数据 13，13 的二进制形式为 1101，在这里需要位数至少为 4 位的 BIT 类型，即可以定义列类型为 BIT(4)。大于二进制 1111 的数据是不能插入 BIT(4) 类型的字段中的。</p>
<blockquote>
<p>提示：默认情况下，MySQL 不可以插入超出该列允许范围的值，因而插入数据时要确保插入的值在指定的范围内。</p>
</blockquote>
<h2 id="BINARY-和-VARBINARY-类型"><a href="#BINARY-和-VARBINARY-类型" class="headerlink" title="BINARY 和 VARBINARY 类型"></a>BINARY 和 VARBINARY 类型</h2><p>BINARY 和 VARBINARY 类型类似于 CHAR 和 VARCHAR，不同的是它们包含二进制字节字符串。使用的语法格式如下：</p>
<p>列名称 BINARY(M) 或者 VARBINARY(M)</p>
<p>BINARY 类型的长度是固定的，指定长度后，不足最大长度的，将在它们右边填充 “\0” 补齐，以达到指定长度。例如，指定列数据类型为 BINARY(3)，当插入 a 时，存储的内容实际为 “\a0\0”，当插入 ab 时，实际存储的内容为“ab\0”，无论存储的内容是否达到指定的长度，存储空间均为指定的值 M。</p>
<p>VARBINARY 类型的长度是可变的，指定好长度之后，长度可以在 0 到最大值之间。例如，指定列数据类型为 VARBINARY(20)，如果插入的值长度只有 10，则实际存储空间为 10 加 1，实际占用的空间为字符串的实际长度加 1。</p>
<h2 id="BLOB-类型"><a href="#BLOB-类型" class="headerlink" title="BLOB 类型"></a>BLOB 类型</h2><p>BLOB 是一个二进制的对象，用来存储可变数量的数据。BLOB 类型分为 4 种：TINYBLOB、BLOB、MEDIUMBLOB 和 LONGBLOB，它们可容纳值的最大长度不同，如下表所示。</p>
<table>
<thead>
<tr>
<th>数据类型</th>
<th>存储范围</th>
</tr>
</thead>
<tbody><tr>
<td>TINYBLOB</td>
<td>最大长度为255 (28-1)字节</td>
</tr>
<tr>
<td>BLOB</td>
<td>最大长度为65535 (216-1)字节</td>
</tr>
<tr>
<td>MEDIUMBLOB</td>
<td>最大长度为16777215 (224-1)字节</td>
</tr>
<tr>
<td>LONGBLOB</td>
<td>最大长度为4294967295或4GB (231-1)字节</td>
</tr>
</tbody></table>
<p>BLOB 列存储的是二进制字符串（字节字符串），TEXT 列存储的是非进制字符串（字符字符串）。BLOB 列是字符集，并且排序和比较基于列值字节的数值；TEXT 列有一个字符集，并且根据字符集对值进行排序和比较。</p>
<h1 id="六-转义类型"><a href="#六-转义类型" class="headerlink" title="六. 转义类型"></a>六. 转义类型</h1><p>转义字符一般以反斜杠符号<code>\</code>开头，用来说明后面的字符不是字符本身的含义，而是表示其它的含义。MySQL 中常见的转义字符如下表所示。</p>
<table>
<thead>
<tr>
<th>转义字符</th>
<th>转义后的字符</th>
</tr>
</thead>
<tbody><tr>
<td>&quot;</td>
<td>双引号（”）</td>
</tr>
<tr>
<td>&#39;</td>
<td>单引号（’）</td>
</tr>
<tr>
<td>\</td>
<td>反斜线（\）</td>
</tr>
<tr>
<td>\n</td>
<td>换行符</td>
</tr>
<tr>
<td>\r</td>
<td>回车符</td>
</tr>
<tr>
<td>\t</td>
<td>制表符</td>
</tr>
<tr>
<td>\0</td>
<td>ASCII 0（NUL）</td>
</tr>
<tr>
<td>\b</td>
<td>退格符</td>
</tr>
</tbody></table>
<p>转义字符区分大小写，例如：’\b’ 解释为退格，但 ‘\B’ 解释为 ‘B’。</p>
<p>有以下几点需要注意：</p>
<ul>
<li>字符串的内容包含单引号<code>&#39;</code>时，可以用单引号<code>&#39;</code>或反斜杠<code>\</code>来转义。</li>
<li>字符串的内容包含双引号<code>&quot;</code>时，可以用双引号<code>&quot;</code>或反斜杠<code>\</code>来转义。</li>
<li>一个字符串用双引号<code>&quot;</code>引用时，该字符串中的单引号<code> &#39;</code>不需要特殊对待，且不必被重复转义。同理，一个字符串用单引号<code>&#39;</code>引用时，该字符串中的双引号<code>&quot;</code>不需要特殊对待，且不必被重复转义。</li>
</ul>
<h1 id="七-系统变量"><a href="#七-系统变量" class="headerlink" title="七. 系统变量"></a>七. 系统变量</h1><p>在 MySQL 数据库，变量分为系统变量和用户自定义变量。系统变量以 @@ 开头，用户自定义变量以 @ 开头。</p>
<p>服务器维护着两种系统变量，即全局变量（GLOBAL VARIABLES）和会话变量（SESSION VARIABLES）。全局变量影响 MySQL 服务的整体运行方式，会话变量影响具体客户端连接的操作。</p>
<p>每一个客户端成功连接服务器后，都会产生与之对应的会话。会话期间，MySQL 服务实例会在服务器内存中生成与该会话对应的会话变量，这些会话变量的初始值是全局变量值的拷贝。</p>
<h2 id="查看系统变量"><a href="#查看系统变量" class="headerlink" title="查看系统变量"></a>查看系统变量</h2><p>可以使用以下命令查看 MySQL 中所有的全局变量信息。</p>
<p>SHOW GLOBAL VARIABLES; </p>
<p>可以使用以下命令查看与当前会话相关的所有会话变量以及全局变量。</p>
<p>SHOW SESSION VARIABLES;</p>
<p>其中，SESSION 关键字可以省略。</p>
<p>MySQL 中的系统变量以两个“@”开头。</p>
<ul>
<li>@@global 仅仅用于标记全局变量；</li>
<li>@@session 仅仅用于标记会话变量；</li>
<li>@@ 首先标记会话变量，如果会话变量不存在，则标记全局变量。</li>
</ul>
<p>MySQL 中有一些系统变量仅仅是全局变量，例如 innodb_data_file_path，可以使用以下 3 种方法查看：</p>
<p>SHOW GLOBAL VARIABLES LIKE ‘innodb_data_file_path’;<br>SHOW SESSION VARIABLES LIKE ‘innodb_data_file_path’;<br>SHOW VARIABLES LIKE ‘innodb_data_file_path’;</p>
<p>MySQL 中有一些系统变量仅仅是会话变量，例如 MySQL 连接 ID 会话变量 pseudo_thread_id，可以使用以下 2 种方法查看。</p>
<p>SHOW SESSION VARIABLES LIKE ‘pseudo_thread_id’;<br>SHOW VARIABLES LIKE ‘pseudo_thread_id’;</p>
<p>MySQL 中有一些系统变量既是全局变量，又是会话变量，例如系统变量 character_set_client 既是全局变量，又是会话变量。</p>
<p>SHOW SESSION VARIABLES LIKE ‘character_set_client’;<br>SHOW VARIABLES LIKE ‘character_set_client’;</p>
<p>此时查看全局变量的方法如下：</p>
<p>SHOW GLOBAL VARIABLES LIKE ‘character_set_client’;</p>
<h2 id="设置系统变量"><a href="#设置系统变量" class="headerlink" title="设置系统变量"></a>设置系统变量</h2><p>可以通过以下方法设置系统变量：</p>
<ol>
<li>修改 MySQL 源代码，然后对 MySQL 源代码重新编译（该方法适用于 MySQL 高级用户，这里不做阐述）。</li>
<li>在 MySQL 配置文件（mysql.ini 或 mysql.cnf）中修改 MySQL 系统变量的值（需要重启 MySQL 服务才会生效）。</li>
<li>在 MySQL 服务运行期间，使用 SET 命令重新设置系统变量的值。</li>
</ol>
<p>服务器启动时，会将所有的全局变量赋予默认值。这些默认值可以在选项文件中或在命令行中对执行的选项进行更改。</p>
<p>更改全局变量，必须具有 SUPER 权限。设置全局变量的值的方法如下：</p>
<ul>
<li>SET @@global.innodb_file_per_table=default;</li>
<li>SET @@global.innodb_file_per_table=ON;</li>
<li>SET global innodb_file_per_table=ON;</li>
</ul>
<p>需要注意的是，更改全局变量只影响更改后连接客户端的相应会话变量，而不会影响目前已经连接的客户端的会话变量（即使客户端执行 SET GLOBAL 语句也不影响）。也就是说，对于修改全局变量之前连接的客户端只有在客户端重新连接后，才会影响到客户端。</p>
<p>客户端连接时，当前全局变量的值会对客户端的会话变量进行相应初始化。设置会话变量不需要特殊权限，但客户端只能更改自己的会话变量，而不能更改其它客户端的会话变量。设置会话变量的值的方法如下：</p>
<ul>
<li>SET @@session.pseudo_thread_id=5;</li>
<li>SET session pseudo_thread_id=5;</li>
<li>SET @@pseudo_thread_id=5;</li>
<li>SET pseudo_thread_id = 5;</li>
</ul>
<p>如果没有指定修改全局变量还是会话变量，服务器会当作会话变量来处理。比如：</p>
<p>SET @@sort_buffer_size = 50000;</p>
<p>上面语句没有指定是 GLOBAL 还是 SESSION，服务器会当做 SESSION 处理。</p>
<p>使用 SET 设置全局变量或会话变量成功后，如果 MySQL 服务重启，数据库的配置就又会重新初始化。一切按照配置文件进行初始化，全局变量和会话变量的配置都会失效。</p>
<p>MySQL 中还有一些特殊的全局变量，如 log_bin、tmpdir、version、datadir，在 MySQL 服务实例运行期间它们的值不能动态修改，也就是不能使用 SET 命令进行重新设置，这种变量称为静态变量。数据库管理员可以使用前面提到的修改源代码或更改配置文件来重新设置静态变量的值。</p>
<h1 id="八-存储引擎概述"><a href="#八-存储引擎概述" class="headerlink" title="八. 存储引擎概述"></a>八. 存储引擎概述</h1><p>数据库存储引擎是数据库底层软件组件，数据库管理系统使用数据引擎进行创建、查询、更新和删除数据操作。简而言之，存储引擎就是指表的类型。数据库的存储引擎决定了表在计算机中的存储方式。不同的存储引擎提供不同的存储机制、索引技巧、锁定水平等功能，使用不同的存储引擎还可以获得特定的功能。</p>
<p>现在许多数据库管理系统都支持多种不同的存储引擎。<a href="http://c.biancheng.net/mysql/">MySQL</a> 的核心就是存储引擎。</p>
<p>MySQL 提供了多个不同的存储引擎，包括处理事务安全表的引擎和处理非事务安全表的引擎。在 MySQL 中，不需要在整个服务器中使用同一种存储引擎，针对具体的要求，可以对每一个表使用不同的存储引擎。</p>
<p>MySQL 5.7 支持的存储引擎有 InnoDB、MyISAM、Memory、Merge、Archive、CSV、BLACKHOLE 等。可以使用<code>SHOW ENGINES;</code>语句查看系统所支持的引擎类型，结果如图所示。</p>
<p><img src="/images/mysql%E5%BC%95%E6%93%8E.png" alt="MySQL数据库中的存储引擎"><br>Support 列的值表示某种引擎是否能使用，<code>YES</code>表示可以使用，<code>NO</code>表示不能使用，<code>DEFAULT</code>表示该引擎为当前默认的存储引擎。</p>
<p>下面简要描写几种存储引擎，后面会对其中的几种（主要是 InnoDB 和 MyISAM ）进行详细讲解。像 NDB 这样的需要更多扩展性的讨论，这超出了本教程的介绍范畴，所以在教程后面对它们不会介绍太多。</p>
<table>
<thead>
<tr>
<th>存储引擎</th>
<th>描述</th>
</tr>
</thead>
<tbody><tr>
<td>ARCHIVE</td>
<td>用于数据存档的引擎，数据被插入后就不能在修改了，且不支持索引。</td>
</tr>
<tr>
<td>CSV</td>
<td>在存储数据时，会以逗号作为数据项之间的分隔符。</td>
</tr>
<tr>
<td>BLACKHOLE</td>
<td>会丢弃写操作，该操作会返回空内容。</td>
</tr>
<tr>
<td>FEDERATED</td>
<td>将数据存储在远程数据库中，用来访问远程表的存储引擎。</td>
</tr>
<tr>
<td>InnoDB</td>
<td>具备外键支持功能的事务处理引擎</td>
</tr>
<tr>
<td>MEMORY</td>
<td>置于内存的表</td>
</tr>
<tr>
<td>MERGE</td>
<td>用来管理由多个 MyISAM 表构成的表集合</td>
</tr>
<tr>
<td>MyISAM</td>
<td>主要的非事务处理存储引擎</td>
</tr>
<tr>
<td>NDB</td>
<td>MySQL 集群专用存储引擎</td>
</tr>
</tbody></table>
<p>有几种存储引擎的名字还有同义词，例如，MRG_MyISAM 和 NDBCLUSTER 分别是 MERGE 和 NDB 的同义词。存储引擎 MEMORY 和 InnoDB 在早期分别称为 HEAP 和 Innobase。虽然后面两个名字仍能被识别，但是已经被废弃了</p>
]]></content>
      <categories>
        <category>mysql</category>
      </categories>
      <tags>
        <tag>基础语法</tag>
      </tags>
  </entry>
</search>
