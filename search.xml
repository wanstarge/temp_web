<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>hexo参数介绍</title>
    <url>/2021/08/06/17-53-07/</url>
    <content><![CDATA[]]></content>
      <categories>
        <category>配置环境</category>
        <category>框架</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>mathtype与word快捷键冲突</title>
    <url>/2021/08/05/09-00-07/</url>
    <content><![CDATA[<p><strong>mathtype和word都有ctrl+c复制键，但两者的估计是哪里的信号冲突，安装了mathtype后在word里面的ctrl+c组合键就会失效，一般的话按照默认路径是不会出事的</strong></p>
<span id="more"></span>

<p><strong>但如果你改动了路径，而且不巧遇到了冲突的情况，那就只按照这个教程来试试，说不定可以哈哈，<a href="https://blog.csdn.net/qq_39004111/article/details/106322554">原文链接</a>在这，怕作者删了，就留一份</strong></p>
<p><img src="/images/mathtype.png" alt="mathtype与word快捷键冲突"></p>
]]></content>
      <categories>
        <category>软件</category>
      </categories>
      <tags>
        <tag>answer</tag>
        <tag>word</tag>
        <tag>mathtype</tag>
      </tags>
  </entry>
  <entry>
    <title>信道基础</title>
    <url>/2021/08/06/22-26-08/</url>
    <content><![CDATA[<p><strong>对复杂信道下无线通信学习的归纳</strong></p>
<h1 id="一-无线通信系统"><a href="#一-无线通信系统" class="headerlink" title="一. 无线通信系统"></a>一. 无线通信系统</h1><p>首先看一张图也是无线系统框图</p>
<span id="more"></span>

<p><img src="/images/%E6%97%A0%E7%BA%BF%E9%80%9A%E4%BF%A1%E7%B3%BB%E7%BB%9F%E6%A1%86%E5%9B%BE.jpg" alt="无线通信系统框图"></p>
<h1 id="二-复杂信道"><a href="#二-复杂信道" class="headerlink" title="二. 复杂信道"></a>二. 复杂信道</h1><h2 id="1-加性高斯白噪声（AWGN）信道"><a href="#1-加性高斯白噪声（AWGN）信道" class="headerlink" title="(1) 加性高斯白噪声（AWGN）信道"></a>(1) 加性高斯白噪声（AWGN）信道</h2><p><strong>信道特性</strong></p>
<p>加性高斯白噪声（Additive White Gaussian Noise， AWGN）是最基本的<br>噪声模型</p>
<p>加性噪声：叠加在信号上的一种噪声，通常记为 n(t)，而且无论有无信<br>号，噪声 n(t)都是始终存在的。因此通常称它为加性噪声或者加性干扰</p>
<p>白噪声：噪声的功率谱密度在所有的频率上均为一常数，则称这样的噪<br>声为白噪声。如果白噪声取值的概率分布服从高斯分布(又称正态分布)，<br>则称这样的噪声为高斯白噪声</p>
<p>信噪比（Signal to Noise Ratio， SNR）是 AWGN 信道性能的关键指标。<br>AWGN 信道中的许多不同性能指标是 SNR 的函数，包括误码率和信道容量。<br>定义为 SNR = E<sub>x</sub> / N<sub>0</sub></p>
<h2 id="2-卫星信道"><a href="#2-卫星信道" class="headerlink" title="(2) 卫星信道"></a>(2) 卫星信道</h2><p>卫星信道充足的带宽允许通信系统以较低的码速率传输数据，数据间的符号间干扰可以忽略，信道引入的加性噪声和干扰可以用高速白噪声来建模,并且这种噪声在符号间是相互独立的，是一种典型的 AWGN信道</p>
<p>卫星信道传输距离远，由于衰减和噪声干扰的影响， 信道在传输过程中将产生畸变，如果要保证通信质量，就需要提高信噪比，但通常卫星通信系统是非实时的、功率受限的，所以必须使用相应的信道编码技术进行检错和纠错。在卫星通信系统中应用差错控制编码，不仅可以给系统提供高的可靠性和传输稳定性，同于由于编码增益的增加，系统传输信息所需的能量可大为降低，这对于功率受限的卫星信道具有重要的意义</p>
<h2 id="3-衰落信道"><a href="#3-衰落信道" class="headerlink" title="(3) 衰落信道"></a>(3) 衰落信道</h2><p><img src="/images/%E4%BF%A1%E9%81%93%E8%A1%B0%E5%BC%B1%E7%89%B9%E6%80%A7.jpg" alt="衰弱信道的分类"></p>
<h3 id="大尺度衰落"><a href="#大尺度衰落" class="headerlink" title="大尺度衰落"></a>大尺度衰落</h3><h4 id="路径损耗："><a href="#路径损耗：" class="headerlink" title="路径损耗："></a>路径损耗：</h4><ol>
<li>由空间传播造成，由发射功率的辐射扩散和信道的传播特性造成的</li>
<li>反映宏观范围内接收信号功率均值的变化  </li>
<li>理论上认为对于相同的收发距离，路径损耗也相同</li>
<li>但实际上相同距离的不同接受点上接收功率存在较大变化</li>
<li>甚至同一接受点不同时间的接收功率也有较大波动 </li>
</ol>
<h4 id="阴影效应："><a href="#阴影效应：" class="headerlink" title="阴影效应："></a>阴影效应：</h4><ol>
<li>指在无线通信系统中，移动台在运动的情况下，由于大型建筑物和其他物体对电波的传输路径的阻挡而在传播接收区域上形成半盲区，从而形成电磁场阴影。 </li>
<li><strong>这种随移动台位置的不断变化而引起的接收点场强中值的起伏变化叫做阴影效应</strong>  </li>
</ol>
<h3 id="小尺度衰落"><a href="#小尺度衰落" class="headerlink" title="小尺度衰落"></a>小尺度衰落</h3><h4 id="多径效应："><a href="#多径效应：" class="headerlink" title="多径效应："></a>多径效应：</h4><p>多径效应指电磁波经不同路径传播后，各分量场到达接收端时间不同，按各自相位相互叠加而造成干扰，使得原来的信号失真，或者产生错误。  </p>
<p>多径效应产生时延扩展（信号最快和最慢到达接收端的时差），导致多路信号叠加后产生多径衰落，对该衰落建的模有比如瑞利型衰落，指接收端信号的振幅 V(t)的一维分布服从瑞利分布（即在任意时刻 ti，V(ti)都是一个服从瑞利分布的随机值）。从频谱上看，多径效应使单一谱线变成了窄带频谱，即多径传播引起了频率弥散。   </p>
<h5 id="平坦衰落"><a href="#平坦衰落" class="headerlink" title="平坦衰落"></a>平坦衰落</h5><p>若信号带宽（如 LTE 的子载波带宽 15kHz）小于信道的相干带宽，则在信号自身的频带内经历的信道基本一样，则为平坦衰落；  </p>
<h5 id="选择性衰落"><a href="#选择性衰落" class="headerlink" title="选择性衰落"></a>选择性衰落</h5><p>反之，信号在自身的频带内不同频率经历的信道差别很大，导致不同频<br>率的衰落不同，称之为频率选择性衰落  </p>
<h5 id="消除方法"><a href="#消除方法" class="headerlink" title="消除方法"></a>消除方法</h5><p>由于多径效应的影响，信号到达时间会产生变化。由于到达时间的变化，同一载波内的符号之间会相互干扰，形成符号间干扰（ISI）。为了消除符号问干扰(ISl)，应该在符号间插入保护间隔。  </p>
<h4 id="多普勒时延"><a href="#多普勒时延" class="headerlink" title="多普勒时延"></a>多普勒时延</h4><p>多普勒效应是指随着观察者距离波源距离远近而发生的频率变化。多普勒效应带来了多普勒扩展（即多普勒频移），信道的相干时间与最大多普勒频移成反比，  </p>
<h5 id="慢衰落"><a href="#慢衰落" class="headerlink" title="慢衰落"></a>慢衰落</h5><p>若发射信号的符号周期小于相干时间，那么认为接收信号经历的是慢衰落（时间非选择性衰落）  </p>
<h5 id="快衰落"><a href="#快衰落" class="headerlink" title="快衰落"></a>快衰落</h5><p>若发射信号的符号周期大于相干时间，那么认为接收信号经历的是快衰落（时间选择性衰落）</p>
<h5 id="消除方法-1"><a href="#消除方法-1" class="headerlink" title="消除方法"></a>消除方法</h5><p>由于中心频率的频移，信号会对其他载波造成干扰，形成载波间干扰（ICI）。在 OFDM 中，为了消除 ICI，通常保护间隔是由循环前缀 CP 来充当（这样既能消除 ICI，又能消除 ISI）。  </p>
<h3 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h3><h5 id="乡村信道："><a href="#乡村信道：" class="headerlink" title="乡村信道："></a>乡村信道：</h5><p>乡村场景，地势开阔，具有山区、平原、圩区等地形。为了覆盖更多的用户，基站一般建设较远。信号经过乡村信道后，将受到地形、天气、湿度、移动台位置等因素影响。</p>
<h5 id="郊区信道："><a href="#郊区信道：" class="headerlink" title="郊区信道："></a>郊区信道：</h5><p>郊区场景，一般建筑物不像城市那么密集，但通信用户也不像乡村场景那样分散。信号经过郊区信道后，将受到 TR 距离、天气、湿度、移动台位置等因素影响。</p>
<h5 id="城市信道："><a href="#城市信道：" class="headerlink" title="城市信道："></a>城市信道：</h5><p>城市场景，建筑密集，基站覆盖广。信号经过城市信道后，将受到建筑物的反射绕射、天气、湿度、移动台位置等因素影响，产生衰落和多径。</p>
<h5 id="室内信道："><a href="#室内信道：" class="headerlink" title="室内信道："></a>室内信道：</h5><p>室内场景，研究时一般会考虑装修材料、 TR 楼层间隔等因素。 信号经过室内场景后，将因为穿过不同材料的装饰物而发生衰减、多径。同时， TR 在不同楼层时，将发生大幅度衰减  </p>
<h2 id="3-干扰信道"><a href="#3-干扰信道" class="headerlink" title="(3) 干扰信道"></a>(3) 干扰信道</h2><p><strong>人为干扰</strong>， 特别是蓄意干扰,是无线通信系统面临的最大和最直接的威胁  </p>
<p>无论是数字通信还是模拟通信， 对通信接收端的高效干扰有<strong>两种方面</strong>：</p>
<ol>
<li>一方面可以直接地表现为对通信信号的信噪比或信干噪比的有效影响,即通过干扰使其低于正常通信的最低门限即可</li>
<li>另一方面， 高效干扰的效果可以间接地表现为对通信信号在“功率-频率-时间冶三维空间的影响,即通过干扰使得在一定的时间、一定的频率上， 使用尽可能低的功率对通信信号进行有效压制。  </li>
</ol>
<h4 id="大致类别"><a href="#大致类别" class="headerlink" title="大致类别"></a>大致类别</h4><ol>
<li>采用瞬时较窄的干扰信号带宽， 以集中干扰功率对干扰目标频率进行有效压制,如<strong>部分频带干扰</strong>  </li>
<li>采用动态频率干扰以有效干扰尽可能宽的频段， 如<strong>扫频干扰</strong>  </li>
<li>采用单频率或几个频率的高速碰撞干扰， 如<strong>单音、多音干扰</strong>等等  </li>
</ol>
<h4 id="简单介绍"><a href="#简单介绍" class="headerlink" title="简单介绍"></a>简单介绍</h4><ol>
<li>单音干扰：单音干扰在频谱上表现为单/多个频点上的强干扰信号。</li>
<li>宽带干扰： 远大于系统带宽的干扰源。</li>
<li>梳状干扰： 干扰频带呈梳形的干扰信号，仅落入这此频带内的通信信号受干扰，干扰频带可为固定的或者移动的。</li>
<li>扫频干扰： 扫频干扰利用一个相对较窄的窄带信号在一定的周期内，重复扫描某个较宽的干扰频带。</li>
</ol>
<h1 id="三-通信系统性能及其评估"><a href="#三-通信系统性能及其评估" class="headerlink" title="三.通信系统性能及其评估"></a>三.通信系统性能及其评估</h1><p>通信的基本目的是及时准确地完成传递、交换信息的任务。 衡量一个无线数字通信系统性能好坏的指标有多种，但最为主要的是<strong>有效性</strong>和<strong>可靠性</strong>。</p>
<p>有效性是指传输一定信息量所占用的频带宽度，即频带利用率；</p>
<p>可靠性是指传输信息的准确程度。</p>
<p>不同的通信系统对有效性和可靠性的要求及度量方法也不尽相同。 针对数字通信系统， 通常可以从误码率、 频带利用率、对信道的适应能力等几个方面进行性能评估。  </p>
<h2 id="1-抗噪声性能"><a href="#1-抗噪声性能" class="headerlink" title="(1) 抗噪声性能"></a>(1) 抗噪声性能</h2><p>通信系统的抗噪声性能是指系统克服加性白噪声影响的能力。 分析条件：假设信道特性是恒参信道，在信号的频带范围内具有理想矩形的传输特性（可取其传输系数为 K） ； 信道噪声是加性高斯白噪声。并且认为噪声只对信号的接收带来影响，因而分析系统性能是在接收端进行的。  </p>
<h2 id="2-误码率"><a href="#2-误码率" class="headerlink" title="(2) 误码率"></a>(2) 误码率</h2><p>误码率是衡量一个通信系统性能的重要指标。 在数字无线通信系统中，信道噪声及干扰有可能使传输码元产生错误， 而错误程度通常用误码率来衡量。 在信道高斯白噪声的干扰下，各种数字调制系统的误码率取决于解调端的输入信噪比，而误码率表达式的形式则取决于解调方式 </p>
<p>相干解调为互补误差函数 ,如下图，非相干解调时，为指数函数形式。  </p>
<p><img src="/images/tex1.png"></p>
<p>常见的数字调制系统 ASK、 FSK、 PSK、 DPSK、 MPSK、 MDPSK 的误码率计算<br>公式如表 1 所示。 表中的误码率公式是在以下前提条件下得到。</p>
<ol>
<li>二进制数字信号“1” 和“0” 是独立且等概率出现的；</li>
<li>信道加性噪声n(t)是零均值高斯白噪声，单边功率谱密度为n<sub>0</sub>, 信道参数恒定；</li>
<li>通过接收滤波器后的噪声为窄带高斯噪声， 其均值为零，方差为σ<sup>2</sup><sub>n</sub>;</li>
<li>由接收滤波器引起的码间串扰很小，忽略不计；  </li>
<li>接收端产生的相干载波的相位差为 0。  </li>
</ol>
<h3 id="计算公式"><a href="#计算公式" class="headerlink" title="计算公式"></a>计算公式</h3><p><img src="/images/%E6%95%B0%E5%AD%97%E8%A7%A3%E8%B0%83%E8%AF%AF%E7%A0%81%E7%8E%87%E8%AE%A1%E7%AE%97%E5%85%AC%E5%BC%8F.jpg"></p>
<h1 id="四-无线通信系统反向设计"><a href="#四-无线通信系统反向设计" class="headerlink" title="四. 无线通信系统反向设计"></a>四. 无线通信系统反向设计</h1><p>无线通信系统的设计是工程应用中面临的一个基本问题。 基于不同的无线信道特性，考虑系统性能要求， 需要反向考虑和设计无线通信系统中的各个模块。  </p>
<p><strong>针对通信系统的有效性，需要考虑信源编码模块的设计。</strong></p>
<h2 id="信源编码"><a href="#信源编码" class="headerlink" title="信源编码"></a>信源编码</h2><ol>
<li>设法减少码元数目和降低码元速率，即通常所说的数据压缩。码元速率将直接影响传输所占的带宽，而传输带宽又直接反映了通信的有效性  </li>
<li>当信息源给出的是模拟语音信号时，信源编码器将其转换成数字信号，以实现模<br>拟信号的<strong>数字化传输</strong> </li>
</ol>
<h2 id="数字化传输"><a href="#数字化传输" class="headerlink" title="数字化传输"></a>数字化传输</h2><h3 id="脉冲编码调制-PCM"><a href="#脉冲编码调制-PCM" class="headerlink" title="脉冲编码调制(PCM)"></a>脉冲编码调制(PCM)</h3><p>简称脉码调制:一种用一组二进制数字代码来代替连续信号的抽样值，从而实现通信的方式。由于这种通信方式抗干扰能力强，它在光纤通信、数字微波通信、卫星通信中均获得了极为广泛的应用  </p>
<h3 id="增量调制-ΔM"><a href="#增量调制-ΔM" class="headerlink" title="增量调制(ΔM)"></a>增量调制(ΔM)</h3><p>将差值编码传输，同样可传输模拟信号所含的信息。此差值又称“增量” ，其值可正可负。这种用差值编码进行通信的方式，就称为“增量调制” ，缩写为 DM 或 ΔM，主要用于军方通信中。信源编码为了减少信源输出符号序列中的剩余度、提高符号的平均信息量，对信源输出的符号序列所施行的变换  </p>
<p><strong>数字化传输具体来说就是针对信源输出符号序列的统计特性来寻找某种方法，把信源输出符号序列变换为最短的码字序列，使后者的各码元所载荷的平均信息量最大，同时又能保证无失真地恢复原来的符号序列</strong> </p>
<h3 id="消除干扰"><a href="#消除干扰" class="headerlink" title="消除干扰"></a>消除干扰</h3><p>信道编码数字信号在信道传输时，由于噪声、衰落以及人为干扰等，将会引起差错。为了减少差错，信道编码器对传输的信息码元按一定的规则加入保护成分（监督元），组成所谓“抗干扰编码”。接收端的信道译码器按一定规则进行解码，从解码过程中发现错误或纠正错误，从而提高通信系统抗干扰能力，实现可靠通信。信道编码是针对无线信道的干扰太多，把你要传送的数据加上些信息，来纠正信道的干扰。  </p>
<p>值得注意的是，信源编码和信道编码并不是单独分离的两个模块，他们对于通信<br>系统的影响是相辅相成的，因此在进行实际通信系统的设计时，需要找到两种编<br>码方案的折中，兼顾系统的有效性和可靠性。  </p>
]]></content>
      <categories>
        <category>大学</category>
      </categories>
      <tags>
        <tag>通信</tag>
      </tags>
  </entry>
  <entry>
    <title>sublime环境搭建</title>
    <url>/2021/08/05/07-28-06/</url>
    <content><![CDATA[<p>**首先最近在用sublime这款软件但其环境配置着实麻烦不得已就全部看了一遍，也是一篇总结，在此分享给友友们希望能帮到你。</p>
<span id="more"></span>
<p>以下出现的.sublime-build文件都可以通过<u>packageresourcesviewer</u>这个插件来实现，安装后在命令面板输入open resource回车打开你要配置的语言即可，或者仿照下面go语言的方法做下不了这个插件的我把文件打包的链接扔在这了，下载:<a href="https://wwi.lanzoui.com/i2Rdapmferi">https://wwi.lanzoui.com/i2Rdapmferi</a> 密码:52pj解压后放入自己资源包的文件中就可以用了**<br>                                    <strong>一切基于自己的编译环境配置好的情况下(也就是可以在命令行时使用的情况下)</strong></p>
<h1 id="c-c"><a href="#c-c" class="headerlink" title="c/c++"></a>c/c++</h1><p><strong>在csingle.sublime-build或者c++.sublime-build中更改配置如下，一般改一个就行了这个要装<u>mingw</u>且配置好环境变量，具体自行百度</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&#123; </span><br><span class="line">    <span class="string">&quot;cmd&quot;</span>: [<span class="string">&quot;g++&quot;</span>, <span class="string">&quot;<span class="variable">$&#123;file&#125;</span>&quot;</span>, <span class="string">&quot;-std=c++11&quot;</span>, <span class="string">&quot;-o&quot;</span>, <span class="string">&quot;<span class="variable">$&#123;file_path&#125;</span>\\\\<span class="variable">$&#123;file_base_name&#125;</span>&quot;</span>, <span class="string">&quot;&amp;&quot;</span>, <span class="string">&quot;start&quot;</span>, <span class="string">&quot;cmd&quot;</span>, <span class="string">&quot;/c&quot;</span>, <span class="string">&quot;<span class="variable">$&#123;file_path&#125;</span>\\\\<span class="variable">$&#123;file_base_name&#125;</span> &amp; echo. &amp; pause&quot;</span>],</span><br><span class="line">    <span class="string">&quot;file_regex&quot;</span>: <span class="string">&quot;^(..[^:]*):([0-9]+):?([0-9]+)?:? (.*)$&quot;</span>, <span class="string">&quot;working_dir&quot;</span>: <span class="string">&quot;<span class="variable">$&#123;file_path&#125;</span>&quot;</span>,</span><br><span class="line">    <span class="string">&quot;selector&quot;</span>: <span class="string">&quot;source.c, source.c++&quot;</span>, <span class="string">&quot;shell&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="string">&quot;encoding&quot;</span>:<span class="string">&quot;cp936&quot;</span>,</span><br><span class="line">    <span class="string">&quot;variants&quot;</span>:</span><br><span class="line">    [</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="string">&quot;name&quot;</span> : <span class="string">&quot;Build Only&quot;</span>,</span><br><span class="line">            <span class="string">&quot;cmd&quot;</span>:[<span class="string">&quot;g++&quot;</span>, <span class="string">&quot;<span class="variable">$&#123;file&#125;</span>&quot;</span>, <span class="string">&quot;-std=c++11&quot;</span>, <span class="string">&quot;-o&quot;</span>, <span class="string">&quot;<span class="variable">$&#123;file_path&#125;</span>\\\\<span class="variable">$&#123;file_base_name&#125;</span>&quot;</span>]</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="string">&quot;name&quot;</span> : <span class="string">&quot;Run Only&quot;</span>,</span><br><span class="line">            <span class="string">&quot;cmd&quot;</span> : [<span class="string">&quot;start&quot;</span>, <span class="string">&quot;cmd&quot;</span>, <span class="string">&quot;/c&quot;</span>, <span class="string">&quot;<span class="variable">$&#123;file_path&#125;</span>\\\\<span class="variable">$&#123;file_base_name&#125;</span> &amp; echo. &amp; pause&quot;</span>]</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="string">&quot;name&quot;</span> : <span class="string">&quot;Pipe Build and Run&quot;</span>,</span><br><span class="line">            <span class="string">&quot;cmd&quot;</span>:[<span class="string">&quot;g++&quot;</span>, <span class="string">&quot;<span class="variable">$&#123;file&#125;</span>&quot;</span>, <span class="string">&quot;-std=c++11&quot;</span>, <span class="string">&quot;-o&quot;</span>, <span class="string">&quot;<span class="variable">$&#123;file_path&#125;</span>\\\\<span class="variable">$&#123;file_base_name&#125;</span>&quot;</span>,<span class="string">&quot;&amp;&quot;</span>,<span class="string">&quot;<span class="variable">$&#123;file_path&#125;</span>\\\\<span class="variable">$&#123;file_base_name&#125;</span>&quot;</span>, <span class="string">&quot;&lt;&quot;</span>,<span class="string">&quot;<span class="variable">$&#123;file_path&#125;</span>\\\\in&quot;</span>,<span class="string">&quot;&gt;&quot;</span>,<span class="string">&quot;<span class="variable">$&#123;file_path&#125;</span>\\\\out&quot;</span>]</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="string">&quot;name&quot;</span> : <span class="string">&quot;Pipe Run Only&quot;</span>,</span><br><span class="line">            <span class="string">&quot;cmd&quot;</span> : [<span class="string">&quot;<span class="variable">$&#123;file_base_name&#125;</span>&quot;</span>, <span class="string">&quot;&lt;&quot;</span>,<span class="string">&quot;in&quot;</span>,<span class="string">&quot;&gt;&quot;</span>,<span class="string">&quot;out&quot;</span>]</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="string">&quot;name&quot;</span> : <span class="string">&quot;Project Build &amp; Run&quot;</span>,</span><br><span class="line">            <span class="string">&quot;cmd&quot;</span> : [<span class="string">&quot;g++&quot;</span>, <span class="string">&quot;<span class="variable">$&#123;file_path&#125;</span>\\\\*.cpp&quot;</span>, <span class="string">&quot;-std=c++11&quot;</span>, <span class="string">&quot;-o&quot;</span>, <span class="string">&quot;<span class="variable">$&#123;file_path&#125;</span>/<span class="variable">$&#123;file_base_name&#125;</span>&quot;</span>, <span class="string">&quot;&amp;&quot;</span>, <span class="string">&quot;start&quot;</span>, <span class="string">&quot;cmd&quot;</span>, <span class="string">&quot;/c&quot;</span>, <span class="string">&quot;<span class="variable">$&#123;file_path&#125;</span>/<span class="variable">$&#123;file_base_name&#125;</span> &amp; echo. &amp; pause&quot;</span>]</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="string">&quot;name&quot;</span> : <span class="string">&quot;Project Build Only&quot;</span>,</span><br><span class="line">            <span class="string">&quot;cmd&quot;</span> : [<span class="string">&quot;g++&quot;</span>, <span class="string">&quot;<span class="variable">$&#123;file_path&#125;</span>\\\\*.cpp&quot;</span>, <span class="string">&quot;-std=c++11&quot;</span>, <span class="string">&quot;-o&quot;</span>, <span class="string">&quot;<span class="variable">$&#123;file_path&#125;</span>/<span class="variable">$&#123;file_base_name&#125;</span>&quot;</span>]</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="string">&quot;name&quot;</span> : <span class="string">&quot;Project Run Only&quot;</span>,</span><br><span class="line">            <span class="string">&quot;cmd&quot;</span> : [<span class="string">&quot;start&quot;</span>, <span class="string">&quot;cmd&quot;</span>, <span class="string">&quot;/c&quot;</span>, <span class="string">&quot;<span class="variable">$&#123;file_path&#125;</span>/<span class="variable">$&#123;file_base_name&#125;</span> &amp; echo. &amp; pause&quot;</span>]</span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="javac"><a href="#javac" class="headerlink" title="javac"></a>javac</h1><p><strong>javac.sublime-build</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line"><span class="string">&quot;shell_cmd&quot;</span>: <span class="string">&quot;runJava.bat \&quot;<span class="variable">$file</span>\&quot;&quot;</span>,</span><br><span class="line"><span class="string">&quot;file_regex&quot;</span>: <span class="string">&quot;^(...*?):([0-9]*):?([0-9]*)&quot;</span>,</span><br><span class="line"><span class="string">&quot;selector&quot;</span>: <span class="string">&quot;source.java&quot;</span>,</span><br><span class="line"><span class="string">&quot;encoding&quot;</span>: <span class="string">&quot;utf-8&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>其中runjava.bat应配置文件如下,记得放到自己的jdk的bin目录下</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">@ECHO OFF</span><br><span class="line"><span class="built_in">cd</span> %~dp1</span><br><span class="line">ECHO Compiling %~nx1.......</span><br><span class="line">IF EXIST %~n1.class (</span><br><span class="line">DEL %~n1.class</span><br><span class="line">)</span><br><span class="line">javac %~nx1</span><br><span class="line">IF EXIST %~n1.class (</span><br><span class="line">ECHO -----------OUTPUT-----------</span><br><span class="line">java %~n1</span><br><span class="line">)</span><br></pre></td></tr></table></figure>

<h1 id="go"><a href="#go" class="headerlink" title="go"></a>go</h1><p><strong><u>这个自己在自己安装的sublime路径下\Data\Packages中创建一个文件夹，而后在该文件中创建一个Go.sublime-build文件</u></strong></p>
<p><strong>Go.sublime-build内容</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&#123; </span><br><span class="line">    <span class="string">&quot;cmd&quot;</span>: [<span class="string">&quot;go&quot;</span>, <span class="string">&quot;run&quot;</span>, <span class="string">&quot;<span class="variable">$file_name</span>&quot;</span>], </span><br><span class="line">    <span class="string">&quot;file_regex&quot;</span>: <span class="string">&quot;^[ ]*File \&quot;(…*?)\&quot;, line ([0-9]*)&quot;</span>, </span><br><span class="line">    <span class="string">&quot;working_dir&quot;</span>: <span class="string">&quot;<span class="variable">$file_path</span>&quot;</span>, </span><br><span class="line">    <span class="string">&quot;selector&quot;</span>: <span class="string">&quot;source.go&quot;</span> </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="Bash"><a href="#Bash" class="headerlink" title="Bash"></a>Bash</h1><p><strong>这个需要装linux子系统，在设置中启用适用于linux的windows子系统,而后在shellscript.sublime-build中改为如下配置</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;cmd&quot;</span> : [<span class="string">&quot;bash&quot;</span>, <span class="string">&quot;-c&quot;</span>, <span class="string">&quot;bash <span class="variable">$&#123;file_name&#125;</span>&quot;</span>],</span><br><span class="line">  <span class="string">&quot;shell&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">  <span class="string">&quot;working_dir&quot;</span>: <span class="string">&quot;<span class="variable">$&#123;file_path&#125;</span>&quot;</span>,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="python"><a href="#python" class="headerlink" title="python"></a>python</h1><p><strong>在python.sublime-build文件中改为</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line"><span class="string">&quot;cmd&quot;</span>: [<span class="string">&quot;python&quot;</span>,<span class="string">&quot;-u&quot;</span>,<span class="string">&quot;<span class="variable">$file</span>&quot;</span>],</span><br><span class="line"><span class="string">&quot;file_regex&quot;</span>: <span class="string">&quot;^[ ]*File \&quot;(...*?)\&quot;, line ([0-9]*)&quot;</span>,</span><br><span class="line"><span class="string">&quot;selector&quot;</span>: <span class="string">&quot;source.python&quot;</span>,</span><br><span class="line"><span class="string">&quot;shell&quot;</span>:<span class="string">&quot;true&quot;</span>,</span><br><span class="line"><span class="string">&quot;encoding&quot;</span>:<span class="string">&quot;cp936&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>配置环境</category>
        <category>软件</category>
        <category>sublime</category>
      </categories>
      <tags>
        <tag>sublime</tag>
        <tag>bash</tag>
      </tags>
  </entry>
  <entry>
    <title>markdown语法</title>
    <url>/2021/08/05/13-52-54/</url>
    <content><![CDATA[<p><strong>之前纯属觉着好玩学了一点markdown的语法，现在要写博客才发现是真的有用，于是再复习一下，顺便整理出来吧,本地展示是正常的</strong></p>
<span id="more"></span>
<h1 id="一-标题"><a href="#一-标题" class="headerlink" title="一. 标题"></a>一. 标题</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># h1</span><br><span class="line">## h2</span><br><span class="line">### h3</span><br><span class="line">#### h4</span><br><span class="line">....</span><br></pre></td></tr></table></figure>


<p><strong>ps: 示例如下只测试二三四级标题，省的打乱我布局，哈哈，还有要注意#号后的空格，当初可没少踩坑</strong></p>
<h2 id="h2"><a href="#h2" class="headerlink" title="h2"></a>h2</h2><h3 id="h3"><a href="#h3" class="headerlink" title="h3"></a>h3</h3><h4 id="h4"><a href="#h4" class="headerlink" title="h4"></a>h4</h4><h1 id="二-表格"><a href="#二-表格" class="headerlink" title="二. 表格"></a>二. 表格</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">| Tables        | Are           | Cool  |</span><br><span class="line">| ------------- |:-------------:| -----:|</span><br><span class="line">| col 1 is      | right-aligned | $1600 |</span><br><span class="line">| col 2 is      | centered      |   $12 |</span><br><span class="line">| col 3 is      | left-aligned  |    $1 |</span><br></pre></td></tr></table></figure>

<p><strong>ps:  不对齐也可以，只要一一对应就行 样式如下</strong></p>
<table>
<thead>
<tr>
<th>Tables</th>
<th align="center">Are</th>
<th align="right">Cool</th>
</tr>
</thead>
<tbody><tr>
<td>col 1 is</td>
<td align="center">right-aligned</td>
<td align="right">$1600</td>
</tr>
<tr>
<td>col 2 is</td>
<td align="center">centered</td>
<td align="right">$12</td>
</tr>
<tr>
<td>col 3 is</td>
<td align="center">left-aligned</td>
<td align="right">$1</td>
</tr>
</tbody></table>
<h1 id="三-粗体，斜体"><a href="#三-粗体，斜体" class="headerlink" title="三. 粗体，斜体"></a>三. 粗体，斜体</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">*斜体文本*</span><br><span class="line">**粗体文本**</span><br><span class="line">***粗斜体文本***</span><br></pre></td></tr></table></figure>

<p><strong>ps:示例如下</strong></p>
<p><em>斜体文本</em><br><strong>粗体文本</strong><br><em><strong>粗斜体文本</strong></em></p>
<h1 id="四-链接"><a href="#四-链接" class="headerlink" title="四. 链接"></a>四. 链接</h1><h2 id="常用链接"><a href="#常用链接" class="headerlink" title="常用链接"></a>常用链接</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">文字链接 [万星阁](https://wanstarge.github.io)</span><br><span class="line">网址链接 &lt;https://wanstarge.github.io&gt;</span><br></pre></td></tr></table></figure>

<p><strong>ps:示例如下</strong></p>
<p>文字链接 <a href="https://wanstarge.github.io/">万星阁</a><br>网址链接 <a href="https://wanstarge.github.io/">https://wanstarge.github.io</a></p>
<h2 id="高级链接技巧"><a href="#高级链接技巧" class="headerlink" title="高级链接技巧"></a>高级链接技巧</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">这个链接用 first 作为网址变量 [myself][first]</span><br><span class="line">这个链接用 yahoo 作为网址变量 [Yahoo!][yahoo]</span><br><span class="line">然后在文档的结尾为变量赋值（网址）</span><br><span class="line">[first]:https://wanstarge.github.io</span><br><span class="line">[yahoo]:http://www.yahoo.com/</span><br></pre></td></tr></table></figure>

<p><strong>ps: 由于目前发现只有markdown-here支持这种操作，就不再演示了</strong></p>
<h1 id="五-列表"><a href="#五-列表" class="headerlink" title="五. 列表"></a>五. 列表</h1><h2 id="普通无序列表"><a href="#普通无序列表" class="headerlink" title="普通无序列表"></a>普通无序列表</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">- 列表文本前使用 [减号+空格]</span><br><span class="line">+ 列表文本前使用 [加号+空格]</span><br><span class="line">* 列表文本前使用 [星号+空格]</span><br></pre></td></tr></table></figure>

<p><strong>ps:示例如下</strong></p>
<ul>
<li>列表文本前使用 [减号+空格]</li>
</ul>
<ul>
<li>列表文本前使用 [加号+空格]</li>
</ul>
<ul>
<li>列表文本前使用 [星号+空格]</li>
</ul>
<h2 id="普通有序列表"><a href="#普通有序列表" class="headerlink" title="普通有序列表"></a>普通有序列表</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1. 列表前使用 [数字+空格]</span><br><span class="line">2. 我们会自动帮你添加数字</span><br><span class="line">7. 不用担心数字不对，显示的时候我们会自动把这行的 7 纠正为 3</span><br></pre></td></tr></table></figure>

<p><strong>ps:示例如下</strong></p>
<ol>
<li>列表前使用 [数字+空格]</li>
<li>我们会自动帮你添加数字</li>
<li>不用担心数字不对，显示的时候我们会自动把这行的 7 纠正为 3</li>
</ol>
<h2 id="列表嵌套"><a href="#列表嵌套" class="headerlink" title="列表嵌套"></a>列表嵌套</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1. 列出所有元素：</span><br><span class="line">    - 无序列表元素 A</span><br><span class="line">        1. 元素 A 的有序子列表</span><br><span class="line">    - 前面加四个空格</span><br><span class="line">2. 列表里的多段换行：</span><br><span class="line">    前面必须加四个空格，</span><br><span class="line">    这样换行，整体的格式不会乱</span><br><span class="line">3. 列表里引用：</span><br><span class="line"></span><br><span class="line">        &gt; 前面空一行  </span><br><span class="line">        &gt; 需要缩进，顶格将打断列表  </span><br><span class="line">        &gt; 换行需要加两个以上空格并回车</span><br><span class="line"></span><br><span class="line">4. 列表里代码段：</span><br><span class="line">	\```</span><br><span class="line">    前面四个空格，之后按代码语法 \``` 书写</span><br><span class="line">    \```</span><br><span class="line">    </span><br><span class="line">        或者直接八个空格，引入代码块(代码块的部分全都要空格)</span><br></pre></td></tr></table></figure>

<p><strong>ps:示例如下</strong></p>
<ol>
<li><p>列出所有元素：</p>
<ul>
<li>无序列表元素 A<ol>
<li>元素 A 的有序子列表</li>
</ol>
</li>
<li>前面加四个空格</li>
</ul>
</li>
<li><p>列表里的多段换行：<br> 前面必须加四个空格，<br> 这样换行，整体的格式不会乱</p>
</li>
<li><p>列表里引用：</p>
<pre><code> &gt; 前面空一行  
 &gt; 需要缩进，顶格将打断列表  
 &gt; 换行需要加两个以上空格并回车
</code></pre>
</li>
<li><p>列表里代码段：</p>
</li>
</ol>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">前面四个空格，之后按代码语法 ``` 书写</span><br></pre></td></tr></table></figure>

<pre><code>    或者直接八个空格，引入代码块
</code></pre>
<h1 id="六-引用"><a href="#六-引用" class="headerlink" title="六. 引用"></a>六. 引用</h1><h2 id="普通引用"><a href="#普通引用" class="headerlink" title="普通引用"></a>普通引用</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&gt; 引用文本前使用 [大于号+空格]  </span><br><span class="line">&gt; 折行可以不加，新起一行都要加上哦</span><br></pre></td></tr></table></figure>

<p><strong>ps:示例如下</strong></p>
<blockquote>
<p>引用文本前使用 [大于号+空格]<br>折行可以不加，新起一行都要加上哦</p>
</blockquote>
<h2 id="引用里嵌套引用"><a href="#引用里嵌套引用" class="headerlink" title="引用里嵌套引用"></a>引用里嵌套引用</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&gt; 最外层引用</span><br><span class="line">&gt;&gt; 多一个 &gt; 嵌套一层引用</span><br><span class="line">&gt;&gt;&gt; 可以嵌套很多层</span><br></pre></td></tr></table></figure>

<p><strong>ps:示例如下</strong></p>
<blockquote>
<p>最外层引用</p>
<blockquote>
<p>多一个 &gt; 嵌套一层引用</p>
<blockquote>
<p>可以嵌套很多层</p>
</blockquote>
</blockquote>
</blockquote>
<h2 id="引用里嵌套列表"><a href="#引用里嵌套列表" class="headerlink" title="引用里嵌套列表"></a>引用里嵌套列表</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&gt; - 这是引用里嵌套的一个列表</span><br><span class="line">&gt; - 还可以有子列表</span><br><span class="line">&gt;     * 子列表需要从 - 之后延后四个空格开始</span><br></pre></td></tr></table></figure>

<p><strong>ps:示例如下</strong></p>
<blockquote>
<ul>
<li>这是引用里嵌套的一个列表</li>
<li>还可以有子列表<ul>
<li>子列表需要从 - 之后延后四个空格开始</li>
</ul>
</li>
</ul>
</blockquote>
<h2 id="引用里嵌套代码块"><a href="#引用里嵌套代码块" class="headerlink" title="引用里嵌套代码块"></a>引用里嵌套代码块</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&gt;     同样的，在前面加四个空格形成代码块(这里没有显示不过markdown\-here和github都可以使用)</span><br><span class="line">&gt;  </span><br></pre></td></tr></table></figure>
<blockquote>
<p>或者使用 ``` 形成代码块</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">```</span><br><span class="line"></span><br><span class="line">**ps:示例如下**</span><br><span class="line"></span><br><span class="line">    同样的，在前面加四个空格形成代码块(这里没有显示不过markdown\-here和github都可以使用)</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<pre><code>或者使用 ``` 形成代码块
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"># 七. 图片</span><br><span class="line"></span><br></pre></td></tr></table></figure>
</code></pre>
<p><img src="https://wanstarge.github.io/images/avatar.jpg" alt="图片名称"></p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">**ps:示例如下**</span><br><span class="line"></span><br><span class="line">&lt;img src=&quot;https://wanstarge.github.io/images/avatar.jpg&quot; alt=&quot;图片名称&quot; style=&quot;zoom:25%;&quot; /&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>也有之前说的那种高级方式，不过也只能在markdown-here里面使用<br>这个链接用 1 作为网址变量  <img src="https://www.baidu.com/img/bdlogo.png" alt="Google">.<br>然后在文档的结尾位变量赋值（网址）</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"># 八.  常用操作</span><br><span class="line"></span><br><span class="line">## 换行</span><br><span class="line"></span><br><span class="line">如果另起一行，只需在当前行结尾加 2 个空格，在当前行的结尾加 2 个空格，这行就会新起一行，如果是要起一个新段落，只需要空出一行即可。</span><br><span class="line"></span><br><span class="line">## 分隔符</span><br><span class="line"></span><br><span class="line">如果你有写分割线的习惯，可以新起一行输入三个减号 -：</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<hr>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">**ps:示例如下**</span><br><span class="line"></span><br><span class="line">---</span><br><span class="line"></span><br><span class="line">## 符号转义</span><br><span class="line"></span><br><span class="line">如果你的描述中需要用到 markdown 的符号，比如 `_ # *` 等，但又不想它被转义，这时候可以在这些符号前加反斜杠，如 `\_ \# \*` 进行避免。</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p> 复制代码 隐藏代码_不想这里的文本变斜体_<br>**不想这里的文本被加粗**</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">\_不想这里的文本变斜体\_</span><br><span class="line">\*\*不想这里的文本被加粗\*\*</span><br><span class="line"></span><br><span class="line"># 九. 代码</span><br><span class="line"></span><br><span class="line">## 行内代码</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>如果只想高亮正文中某个词，可以用两个反引号包裹起来<br><code>行内代码</code></p>
<pre><code>            下面这两个也只适用于markdown-here
</code></pre>
<p>如果行内代码包含反引号，可以用多个反引号包裹<br>包含<code>反引号(`) </code> 的行内代码<br>如果行内代码开头就有反引号，需要起始端和结束端各一个空格<br><code>`反引号`</code></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">**ps:示例如下**</span><br><span class="line"></span><br><span class="line">`行内代码` </span><br><span class="line"></span><br><span class="line">## 普通代码</span><br><span class="line"></span><br><span class="line">### 反引号包裹</span><br><span class="line"></span><br><span class="line">用3个或以上的反引号包裹起来</span><br><span class="line"></span><br><span class="line">`````</span><br><span class="line"> 复制代码 隐藏代码```</span><br><span class="line"># rewrite`s rules for wordpress pretty url </span><br><span class="line">LoadModule rewrite_module  modules/mod_rewrite.so</span><br><span class="line">RewriteCond %&#123;REQUEST_FILENAME&#125; !-f</span><br><span class="line">RewriteCond %&#123;REQUEST_FILENAME&#125; !-d</span><br><span class="line">RewriteRule . index.php [NC,L]</span><br><span class="line">````</span><br><span class="line">`````</span><br><span class="line"></span><br><span class="line">### 波浪线包裹</span><br><span class="line"></span><br><span class="line">使用3个及以上的波浪线包裹代码</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<pre><code># rewrite`s rules for wordpress pretty url 
LoadModule rewrite_module  modules/mod_rewrite.so
RewriteCond %&#123;REQUEST_FILENAME&#125; !-f
RewriteCond %&#123;REQUEST_FILENAME&#125; !-d
RewriteRule . index.php [NC,L]
</code></pre>
<pre><code>
</code></pre>
]]></content>
      <categories>
        <category>markdown</category>
      </categories>
      <tags>
        <tag>基础语法</tag>
      </tags>
  </entry>
  <entry>
    <title>sublime-linux python</title>
    <url>/2021/08/05/09-01-34/</url>
    <content><![CDATA[<p><strong>sublime在linux上调用python执行代码时会报错，找不到python选项，而linux上python2命名为python，而python3则就需要直接写成python3，解决方法</strong></p>
<span id="more"></span>
<h3 id="一-直接用命令创建软链接"><a href="#一-直接用命令创建软链接" class="headerlink" title="一. 直接用命令创建软链接"></a>一. 直接用命令创建软链接</h3><p>将python指向python3，同时将pip指向pip3</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ln -s /usr/bin/python3 /usr/bin/python</span><br><span class="line">ln -s /usr/<span class="built_in">local</span>/bin/pip /usr/<span class="built_in">local</span>/bin/pip3</span><br></pre></td></tr></table></figure>

<p>对了改动应该会需要超级用户权限，在前面加个sudo就行，记得空格</p>
<h3 id="二-改动sublime的源文件"><a href="#二-改动sublime的源文件" class="headerlink" title="二. 改动sublime的源文件"></a>二. 改动sublime的源文件</h3><p>就是这个**<u>Main.sublime-menu</u>**,上sublime对应的根目录里去搜就行</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[</span><br><span class="line">     &#123;</span><br><span class="line">        <span class="string">&quot;id&quot;</span>: <span class="string">&quot;tools&quot;</span>,</span><br><span class="line">        <span class="string">&quot;children&quot;</span>:</span><br><span class="line">        [&#123;</span><br><span class="line">            <span class="string">&quot;caption&quot;</span>: <span class="string">&quot;SublimeREPL&quot;</span>,</span><br><span class="line">            <span class="string">&quot;mnemonic&quot;</span>: <span class="string">&quot;r&quot;</span>,</span><br><span class="line">            <span class="string">&quot;id&quot;</span>: <span class="string">&quot;SublimeREPL&quot;</span>,</span><br><span class="line">            <span class="string">&quot;children&quot;</span>:</span><br><span class="line">            [</span><br><span class="line">                &#123;<span class="string">&quot;caption&quot;</span>: <span class="string">&quot;Python&quot;</span>,</span><br><span class="line">                <span class="string">&quot;id&quot;</span>: <span class="string">&quot;Python&quot;</span>,</span><br><span class="line"> </span><br><span class="line">                 <span class="string">&quot;children&quot;</span>:[</span><br><span class="line">                    &#123;<span class="string">&quot;command&quot;</span>: <span class="string">&quot;repl_open&quot;</span>,</span><br><span class="line">                     <span class="string">&quot;caption&quot;</span>: <span class="string">&quot;Python&quot;</span>,</span><br><span class="line">                     <span class="string">&quot;id&quot;</span>: <span class="string">&quot;repl_python&quot;</span>,</span><br><span class="line">                     <span class="string">&quot;mnemonic&quot;</span>: <span class="string">&quot;p&quot;</span>,</span><br><span class="line">                     <span class="string">&quot;args&quot;</span>: &#123;</span><br><span class="line">                        <span class="string">&quot;type&quot;</span>: <span class="string">&quot;subprocess&quot;</span>,</span><br><span class="line">                        <span class="string">&quot;encoding&quot;</span>: <span class="string">&quot;utf8&quot;</span>,</span><br><span class="line">                        <span class="string">&quot;cmd&quot;</span>: [<span class="string">&quot;python3&quot;</span>, <span class="string">&quot;-i&quot;</span>, <span class="string">&quot;-u&quot;</span>],</span><br><span class="line">                        <span class="string">&quot;cwd&quot;</span>: <span class="string">&quot;<span class="variable">$file_path</span>&quot;</span>,</span><br><span class="line">                        <span class="string">&quot;syntax&quot;</span>: <span class="string">&quot;Packages/Python/Python.tmLanguage&quot;</span>,</span><br><span class="line">                        <span class="string">&quot;external_id&quot;</span>: <span class="string">&quot;python&quot;</span>,</span><br><span class="line">                        <span class="string">&quot;extend_env&quot;</span>: &#123;<span class="string">&quot;PYTHONIOENCODING&quot;</span>: <span class="string">&quot;utf-8&quot;</span>&#125;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;,</span><br><span class="line">                    &#123;<span class="string">&quot;command&quot;</span>: <span class="string">&quot;python_virtualenv_repl&quot;</span>,</span><br><span class="line">                     <span class="string">&quot;id&quot;</span>: <span class="string">&quot;python_virtualenv_repl&quot;</span>,</span><br><span class="line">                     <span class="string">&quot;caption&quot;</span>: <span class="string">&quot;Python - virtualenv&quot;</span>&#125;,</span><br><span class="line">                    &#123;<span class="string">&quot;command&quot;</span>: <span class="string">&quot;repl_open&quot;</span>,</span><br><span class="line">                     <span class="string">&quot;caption&quot;</span>: <span class="string">&quot;Python - PDB current file&quot;</span>,</span><br><span class="line">                     <span class="string">&quot;id&quot;</span>: <span class="string">&quot;repl_python_pdb&quot;</span>,</span><br><span class="line">                     <span class="string">&quot;mnemonic&quot;</span>: <span class="string">&quot;d&quot;</span>,</span><br><span class="line">                     <span class="string">&quot;args&quot;</span>: &#123;</span><br><span class="line">                        <span class="string">&quot;type&quot;</span>: <span class="string">&quot;subprocess&quot;</span>,</span><br><span class="line">                        <span class="string">&quot;encoding&quot;</span>: <span class="string">&quot;utf8&quot;</span>,</span><br><span class="line">                        <span class="string">&quot;cmd&quot;</span>: [<span class="string">&quot;python3&quot;</span>, <span class="string">&quot;-i&quot;</span>, <span class="string">&quot;-u&quot;</span>, <span class="string">&quot;-m&quot;</span>, <span class="string">&quot;pdb&quot;</span>, <span class="string">&quot;<span class="variable">$file_basename</span>&quot;</span>],</span><br><span class="line">                        <span class="string">&quot;cwd&quot;</span>: <span class="string">&quot;<span class="variable">$file_path</span>&quot;</span>,</span><br><span class="line">                        <span class="string">&quot;syntax&quot;</span>: <span class="string">&quot;Packages/Python/Python.tmLanguage&quot;</span>,</span><br><span class="line">                        <span class="string">&quot;external_id&quot;</span>: <span class="string">&quot;python&quot;</span>,</span><br><span class="line">                        <span class="string">&quot;extend_env&quot;</span>: &#123;<span class="string">&quot;PYTHONIOENCODING&quot;</span>: <span class="string">&quot;utf-8&quot;</span>&#125;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;,</span><br><span class="line">                    &#123;<span class="string">&quot;command&quot;</span>: <span class="string">&quot;repl_open&quot;</span>,</span><br><span class="line">                     <span class="string">&quot;caption&quot;</span>: <span class="string">&quot;Python - RUN current file&quot;</span>,</span><br><span class="line">                     <span class="string">&quot;id&quot;</span>: <span class="string">&quot;repl_python_run&quot;</span>,</span><br><span class="line">                     <span class="string">&quot;mnemonic&quot;</span>: <span class="string">&quot;d&quot;</span>,</span><br><span class="line">                     <span class="string">&quot;args&quot;</span>: &#123;</span><br><span class="line">                        <span class="string">&quot;type&quot;</span>: <span class="string">&quot;subprocess&quot;</span>,</span><br><span class="line">                        <span class="string">&quot;encoding&quot;</span>: <span class="string">&quot;utf8&quot;</span>,</span><br><span class="line">                        <span class="string">&quot;cmd&quot;</span>: [<span class="string">&quot;python3&quot;</span>, <span class="string">&quot;-u&quot;</span>, <span class="string">&quot;<span class="variable">$file_basename</span>&quot;</span>],</span><br><span class="line">                        <span class="string">&quot;cwd&quot;</span>: <span class="string">&quot;<span class="variable">$file_path</span>&quot;</span>,</span><br><span class="line">                        <span class="string">&quot;syntax&quot;</span>: <span class="string">&quot;Packages/Python/Python.tmLanguage&quot;</span>,</span><br><span class="line">                        <span class="string">&quot;external_id&quot;</span>: <span class="string">&quot;python&quot;</span>,</span><br><span class="line">                        <span class="string">&quot;extend_env&quot;</span>: &#123;<span class="string">&quot;PYTHONIOENCODING&quot;</span>: <span class="string">&quot;utf-8&quot;</span>&#125;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;,</span><br><span class="line">                    &#123;<span class="string">&quot;command&quot;</span>: <span class="string">&quot;repl_open&quot;</span>,</span><br><span class="line">                     <span class="string">&quot;caption&quot;</span>: <span class="string">&quot;Python - IPython&quot;</span>,</span><br><span class="line">                     <span class="string">&quot;id&quot;</span>: <span class="string">&quot;repl_python_ipython&quot;</span>,</span><br><span class="line">                     <span class="string">&quot;mnemonic&quot;</span>: <span class="string">&quot;p&quot;</span>,</span><br><span class="line">                     <span class="string">&quot;args&quot;</span>: &#123;</span><br><span class="line">                        <span class="string">&quot;type&quot;</span>: <span class="string">&quot;subprocess&quot;</span>,</span><br><span class="line">                        <span class="string">&quot;encoding&quot;</span>: <span class="string">&quot;utf8&quot;</span>,</span><br><span class="line">                        <span class="string">&quot;autocomplete_server&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">                        <span class="string">&quot;cmd&quot;</span>: &#123;</span><br><span class="line">                            <span class="string">&quot;osx&quot;</span>: [<span class="string">&quot;python&quot;</span>, <span class="string">&quot;-u&quot;</span>, <span class="string">&quot;<span class="variable">$&#123;packages&#125;</span>/SublimeREPL/config/Python/ipy_repl.py&quot;</span>],</span><br><span class="line">                            <span class="string">&quot;linux&quot;</span>: [<span class="string">&quot;python3&quot;</span>, <span class="string">&quot;-u&quot;</span>, <span class="string">&quot;<span class="variable">$&#123;packages&#125;</span>/SublimeREPL/config/Python/ipy_repl.py&quot;</span>],</span><br><span class="line">                            <span class="string">&quot;windows&quot;</span>: [<span class="string">&quot;python&quot;</span>, <span class="string">&quot;-u&quot;</span>, <span class="string">&quot;<span class="variable">$&#123;packages&#125;</span>/SublimeREPL/config/Python/ipy_repl.py&quot;</span>]</span><br><span class="line">                        &#125;,</span><br><span class="line">                        <span class="string">&quot;cwd&quot;</span>: <span class="string">&quot;<span class="variable">$file_path</span>&quot;</span>,</span><br><span class="line">                        <span class="string">&quot;syntax&quot;</span>: <span class="string">&quot;Packages/Python/Python.tmLanguage&quot;</span>,</span><br><span class="line">                        <span class="string">&quot;external_id&quot;</span>: <span class="string">&quot;python&quot;</span>,</span><br><span class="line">                        <span class="string">&quot;extend_env&quot;</span>: &#123;</span><br><span class="line">                            <span class="string">&quot;PYTHONIOENCODING&quot;</span>: <span class="string">&quot;utf-8&quot;</span>,</span><br><span class="line">                            <span class="string">&quot;SUBLIMEREPL_EDITOR&quot;</span>: <span class="string">&quot;<span class="variable">$editor</span>&quot;</span></span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                ]&#125;</span><br><span class="line">            ]</span><br><span class="line">        &#125;]</span><br><span class="line">    &#125;</span><br><span class="line">]</span><br></pre></td></tr></table></figure>

<p><strong>ps: 欢迎提出更多实用的方法，一起讨论，共同提升</strong></p>
]]></content>
      <categories>
        <category>配置环境</category>
        <category>软件</category>
        <category>sublime</category>
      </categories>
      <tags>
        <tag>answer</tag>
        <tag>sublime</tag>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title>电脑综合记录</title>
    <url>/2021/08/06/22-31-10/</url>
    <content><![CDATA[<p>Windows里面有好多东西想自己定制，为此不免要涉及到好多系统对应的<br>源文件，在这里稍微整理一下，欢迎讨论补充</p>
<span id="more"></span>

<h1 id="一-注册表"><a href="#一-注册表" class="headerlink" title="一.注册表"></a>一.注册表</h1><h2 id="1-桌面右键新建"><a href="#1-桌面右键新建" class="headerlink" title="1. 桌面右键新建"></a>1. 桌面右键新建</h2><p>添加鼠标右键新建项：对应单击桌面空白处，新建菜单中的项目对应注册表<br>中的位置 ：</p>
<p>HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion<br>Explorer\Discardable\PostSetup\ShellNew</p>
<h2 id="2-桌面右键菜单"><a href="#2-桌面右键菜单" class="headerlink" title="2. 桌面右键菜单"></a>2. 桌面右键菜单</h2><p>鼠标单击桌面：桌面空白处点击右键菜单对应注册表位置：</p>
<p>HKEY_CLASSES_ROOT\Directory\Background\shellex<br>ContextMenuHandlers</p>
<h2 id="3-文件右键菜单"><a href="#3-文件右键菜单" class="headerlink" title="3. 文件右键菜单"></a>3. 文件右键菜单</h2><p>右键单击文件：鼠标右键文件，弹出的菜单项对应注册表中的位置：</p>
<p>HKEY_CLASSES_ROOT*\shellex\ContextMenuHandlers</p>
<h2 id="4-文件夹右键菜单"><a href="#4-文件夹右键菜单" class="headerlink" title="4. 文件夹右键菜单"></a>4. 文件夹右键菜单</h2><p>单击文件夹：鼠标右键文件夹，弹出的菜单项对应注册表中的位置：</p>
<p>HKEY_CLASSES_ROOT\Directory\shellex\ContextMenuHandlers</p>
<h2 id="5-IE浏览器右键"><a href="#5-IE浏览器右键" class="headerlink" title="5. IE浏览器右键"></a>5. IE浏览器右键</h2><p>鼠标单击ie浏览器里：鼠标右键在IE浏览器里，弹出的菜单明细对应注册<br>表中的位置：</p>
<p>HKEY_CURRENT_USER\Software\Microsoft\Internet Explorer<br>MenuExt</p>
<h1 id="全局快捷键"><a href="#全局快捷键" class="headerlink" title="全局快捷键"></a>全局快捷键</h1><p>顾名思义就是无论你在那个应用程序里面正在干着什么事(除了关机)，都能<br>通过快捷键进行调用</p>
<p>主要步骤如下</p>
<ol>
<li>首先win+r打开运行，在里面输入control打开控制面板</li>
<li>搜索并打开管理工具，这时会打开一个文件夹，先放在这别关</li>
<li>在桌面右键新建一个快捷方式，指向你希望快捷键打开的程序</li>
<li>然后对该快捷方式右键属性，点中快捷键框，在键盘上按下<br> 你想定义的快捷键，这时基本上就算成功了，之前没要管理员程序<br> 所以还有第五步，如果要了第五步就可以省了，自己找个文件夹藏着<br> 还有记得不要与系统快捷键冲突</li>
<li>然后将该快捷方式拖入你第二步打开的那个文件夹里，大功告成</li>
</ol>
<h1 id="特殊文件夹"><a href="#特殊文件夹" class="headerlink" title="特殊文件夹"></a>特殊文件夹</h1><p><strong>windows里有一些不为人知的文件夹，命名的名字为它时能触发菜单哟</strong></p>
<ol>
<li>上帝模式，命名为这个时可以管控电脑上几乎所有设置如下：<br> <strong>.{ED7BA470-8E54-465E-825C-99712043E01C}</strong><br> 自己新建一个文件夹命名为它试试看</li>
</ol>
<h1 id="电池计划"><a href="#电池计划" class="headerlink" title="电池计划"></a>电池计划</h1><p><strong>其实电池除了开发商提供的最佳性能外，<br>微软本身也提供了高级电池选项，下面是卓越模式的开启方法</strong></p>
<ol>
<li>win+r 输入powershell</li>
<li>在powershell里面输入<br> <strong>powercfg -duplicatescheme e9a42b02-d5df-448d-aa00-03f14749eb61</strong><br> 以打开卓越模式</li>
</ol>
<h1 id="转换分区引导"><a href="#转换分区引导" class="headerlink" title="转换分区引导"></a>转换分区引导</h1><ol>
<li>legacy引导对应MBR分区的磁盘（性能较差）</li>
<li>UEFI引导对应GPT分区的磁盘（性能较好）</li>
<li>需要开机进入某个模式(应该是高级bios)后shift+F10打开cmd<br> 后依次输入<br> a. Diskpart<br> b. lisk disk<br> c. select disk 0(选中所要改变格式的磁盘)<br> d. clean(清空磁盘全部分区)<br> e. convert GPT    </li>
</ol>
]]></content>
      <categories>
        <category>windows</category>
      </categories>
      <tags>
        <tag>windows</tag>
        <tag>regedit</tag>
        <tag>folder</tag>
        <tag>run</tag>
      </tags>
  </entry>
</search>
